{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/src/Components/Loader/Skeleton.jsx\";\nimport React from \"react\";\nimport Loader from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skeleton = ({\n  className,\n  counter,\n  width\n}) => {\n  // Create an array based on the counter to determine how many skeleton items to render.\n  const skeletonItems = new Array(counter ? counter : 1).fill(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `space-y-8 animate-pulse  rtl:space-x-reverse  d-flex justify-content-center `,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skeleton-content   \",\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [skeletonItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"30vh\",\n          width: width ? width : \"100px\"\n        },\n        className: `rounded  ${className ? className : \"\"} `\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Skeleton;\nexport default Skeleton;\nvar _c;\n$RefreshReg$(_c, \"Skeleton\");","map":{"version":3,"names":["React","Loader","jsxDEV","_jsxDEV","Skeleton","className","counter","width","skeletonItems","Array","fill","children","style","display","justifyContent","alignItems","map","item","index","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/src/Components/Loader/Skeleton.jsx"],"sourcesContent":["import React from \"react\";\nimport Loader from \"./Loader\";\n\nconst Skeleton = ({ className, counter, width }) => {\n  // Create an array based on the counter to determine how many skeleton items to render.\n  const skeletonItems = new Array(counter ? counter : 1).fill(0);\n\n  return (\n    <div\n      className={`space-y-8 animate-pulse  rtl:space-x-reverse  d-flex justify-content-center `} >\n      <div\n        className=\"skeleton-content   \"\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {skeletonItems.map((item, index) => (\n          <div\n            key={index}\n            style={{\n              height: \"30vh\",\n              width: width ? width : \"100px\",\n            }}\n            className={`rounded  ${className ? className : \"\"} `}\n          >\n          </div>\n        ))}\n        <Loader />\n      </div>\n    </div>\n  );\n};\n\nexport default Skeleton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EAClD;EACA,MAAMC,aAAa,GAAG,IAAIC,KAAK,CAACH,OAAO,GAAGA,OAAO,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EAE9D,oBACEP,OAAA;IACEE,SAAS,EAAE,8EAA+E;IAAAM,QAAA,eAC1FR,OAAA;MACEE,SAAS,EAAC,qBAAqB;MAC/BO,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,GAEDH,aAAa,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC7Bf,OAAA;QAEES,KAAK,EAAE;UACLO,MAAM,EAAE,MAAM;UACdZ,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG;QACzB,CAAE;QACFF,SAAS,EAAE,YAAYA,SAAS,GAAGA,SAAS,GAAG,EAAE;MAAI,GALhDa,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOP,CACN,CAAC,eACFpB,OAAA,CAACF,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA9BIpB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}