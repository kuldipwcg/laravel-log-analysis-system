{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { serverApi } from \"store/serverApi\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nexport const store = configureStore({\n  reducer: {\n    [serverApi.reducerPath]: serverApi.reducer\n  },\n  middleware: getDefaultMiddleware => {\n    var _getDefaultMiddleware;\n    return (_getDefaultMiddleware = getDefaultMiddleware()) === null || _getDefaultMiddleware === void 0 ? void 0 : _getDefaultMiddleware.concat(serverApi.middleware);\n  }\n});\n\n// It will enable to refetch the data on certain events, such as refetchOnFocus and refetchOnReconnect.\n\nsetupListeners(store === null || store === void 0 ? void 0 : store.dispatch);","map":{"version":3,"names":["configureStore","serverApi","setupListeners","store","reducer","reducerPath","middleware","getDefaultMiddleware","_getDefaultMiddleware","concat","dispatch"],"sources":["/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/src/store/rtkStore.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { serverApi } from \"store/serverApi\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\n\nexport const store = configureStore({\n  reducer: {\n    [serverApi.reducerPath]: serverApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware()?.concat(serverApi.middleware),\n});\n\n// It will enable to refetch the data on certain events, such as refetchOnFocus and refetchOnReconnect.\n\nsetupListeners(store?.dispatch);\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACP,CAACH,SAAS,CAACI,WAAW,GAAGJ,SAAS,CAACG;EACrC,CAAC;EACDE,UAAU,EAAGC,oBAAoB;IAAA,IAAAC,qBAAA;IAAA,QAAAA,qBAAA,GAC/BD,oBAAoB,CAAC,CAAC,cAAAC,qBAAA,uBAAtBA,qBAAA,CAAwBC,MAAM,CAACR,SAAS,CAACK,UAAU,CAAC;EAAA;AACxD,CAAC,CAAC;;AAEF;;AAEAJ,cAAc,CAACC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}