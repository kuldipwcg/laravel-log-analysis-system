{"ast":null,"code":"import { serverApi } from \"store/serverApi\";\nimport { config } from \"./Config/authConfig\";\nconst loggerAction = serverApi.injectEndpoints({\n  endpoints: builder => ({\n    logger: builder.mutation({\n      query: payload => {\n        if (payload) {\n          var _payload$filter_level, _payload$filter_chann, _payload$filter_level2, _payload$page;\n          const convertedObject = [{\n            key: \"filter_level_name\",\n            value: payload === null || payload === void 0 ? void 0 : (_payload$filter_level = payload.filter_level_name) === null || _payload$filter_level === void 0 ? void 0 : _payload$filter_level.selectedKey\n          }, {\n            key: \"filter_channel\",\n            value: payload === null || payload === void 0 ? void 0 : (_payload$filter_chann = payload.filter_channel) === null || _payload$filter_chann === void 0 ? void 0 : _payload$filter_chann.selectedKey\n          }, {\n            key: \"filter_level\",\n            value: payload === null || payload === void 0 ? void 0 : (_payload$filter_level2 = payload.filter_level) === null || _payload$filter_level2 === void 0 ? void 0 : _payload$filter_level2.selectedKey\n          }];\n          const resultString = convertedObject.filter(item => {\n            return !!item.value;\n          }).map(item => `${item.key}=${item.value}`);\n          console.log(resultString);\n          return config(\"GET\", `/logger?${resultString.join('&')}&page=${(_payload$page = payload === null || payload === void 0 ? void 0 : payload.page) !== null && _payload$page !== void 0 ? _payload$page : 1}`);\n        } else {\n          var _payload$page2;\n          return config(\"GET\", `/logger?page=${(_payload$page2 = payload === null || payload === void 0 ? void 0 : payload.page) !== null && _payload$page2 !== void 0 ? _payload$page2 : 1}`);\n        }\n      },\n      transformResponse: data => {\n        // You can add a delay here, for example, 2 seconds\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(data);\n          }, 500); // 2000 milliseconds = 2 seconds\n        });\n      }\n    }),\n    singleLogger: builder.query({\n      query: data => {\n        return config(\"GET\", `/logger/${data}/show`);\n      }\n    }),\n    loggerFilter: builder.query({\n      query: data => {\n        return config(\"GET\", `/logger/filters`);\n      },\n      transformResponse: data => {\n        // You can add a delay here, for example, 2 seconds\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(data);\n          }, 1000); // 2000 milliseconds = 2 seconds\n        });\n      }\n    })\n  })\n});\nexport const {\n  useLoggerMutation,\n  useSingleLoggerQuery,\n  useLoggerFilterQuery\n} = loggerAction;","map":{"version":3,"names":["serverApi","config","loggerAction","injectEndpoints","endpoints","builder","logger","mutation","query","payload","_payload$filter_level","_payload$filter_chann","_payload$filter_level2","_payload$page","convertedObject","key","value","filter_level_name","selectedKey","filter_channel","filter_level","resultString","filter","item","map","console","log","join","page","_payload$page2","transformResponse","data","Promise","resolve","setTimeout","singleLogger","loggerFilter","useLoggerMutation","useSingleLoggerQuery","useLoggerFilterQuery"],"sources":["/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/src/store/Actions/loggerData.js"],"sourcesContent":["import { serverApi } from \"store/serverApi\";\nimport { config } from \"./Config/authConfig\";\n\nconst loggerAction = serverApi.injectEndpoints({\n  endpoints: (builder) => ({\n    logger: builder.mutation({\n      query: (payload) => {\n        if (payload) {\n          const convertedObject = [\n            {\n              key : \"filter_level_name\", \n              value: payload?.filter_level_name?.selectedKey\n            }, {\n              key : \"filter_channel\", \n              value : payload?.filter_channel?.selectedKey\n            }, {\n              key : \"filter_level\", \n              value: payload?.filter_level?.selectedKey\n            }\n          ];\n\n          const resultString = convertedObject.filter((item)=>{ return !!item.value })\n          .map((item) => `${item.key}=${item.value}`);\n          console.log(resultString)\n\n          return config(\n            \"GET\",\n            `/logger?${resultString.join('&')}&page=${payload?.page ?? 1}`\n          );\n\n        } else {\n          return config(\"GET\", `/logger?page=${payload?.page ?? 1}`);\n        }\n      },\n      transformResponse: (data) => {\n        // You can add a delay here, for example, 2 seconds\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(data);\n          }, 500); // 2000 milliseconds = 2 seconds\n        });\n      },\n    }),\n    singleLogger: builder.query({\n      query: (data) => {\n        return config(\"GET\", `/logger/${data}/show`);\n      },\n    }),\n    loggerFilter: builder.query({\n      query: (data) => {\n        return config(\"GET\", `/logger/filters`);\n      },\n      transformResponse: (data) => {\n        // You can add a delay here, for example, 2 seconds\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(data);\n          }, 1000); // 2000 milliseconds = 2 seconds\n        });\n      },\n    }),\n  }),\n});\nexport const { useLoggerMutation, useSingleLoggerQuery, useLoggerFilterQuery } =\n  loggerAction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}