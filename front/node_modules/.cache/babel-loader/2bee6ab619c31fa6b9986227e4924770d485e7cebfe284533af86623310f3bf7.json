{"ast":null,"code":"import { serverApi } from \"store/serverApi\";\nconst authAction = serverApi.enhanceEndpoints({\n  tagTypes: [\"users\"]\n}).injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query(body) {\n        return {\n          url: `login`,\n          method: \"POST\",\n          body: body\n        };\n      }\n    }),\n    resetPassword: builder.mutation({\n      query(body) {\n        return {\n          url: `forgotpassword`,\n          method: \"POST\",\n          body: body\n        };\n      }\n    }),\n    changePassword: builder.mutation({\n      query(body) {\n        return {\n          url: `changepassword`,\n          method: \"POST\",\n          body: body\n        };\n      }\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useResetPasswordMutation,\n  useChangePasswordMutation\n} = authAction;","map":{"version":3,"names":["serverApi","authAction","enhanceEndpoints","tagTypes","injectEndpoints","endpoints","builder","login","mutation","query","body","url","method","resetPassword","changePassword","useLoginMutation","useResetPasswordMutation","useChangePasswordMutation"],"sources":["/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/src/store/Actions/authAction.js"],"sourcesContent":["import { serverApi } from \"store/serverApi\";\n\nconst authAction = serverApi\n  .enhanceEndpoints({ tagTypes: [\"users\"] })\n  .injectEndpoints({\n    endpoints: (builder) => ({\n      login: builder.mutation({\n        query(body) {\n          return {\n            url: `login`,\n            method: \"POST\",\n            body: body,\n          };\n        },\n      }),\n      resetPassword: builder.mutation({\n        query(body) {\n          return {\n            url: `forgotpassword`,\n            method: \"POST\",\n            body: body,\n          };\n        },\n      }),\n      changePassword: builder.mutation({\n        query(body) {\n          return {\n            url: `changepassword`,\n            method: \"POST\",\n            body: body,\n          };\n        },\n      }),\n    }),\n  });\nexport const {\n  useLoginMutation,\n  useResetPasswordMutation,\n  useChangePasswordMutation,\n} = authAction;\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,MAAMC,UAAU,GAAGD,SAAS,CACzBE,gBAAgB,CAAC;EAAEC,QAAQ,EAAE,CAAC,OAAO;AAAE,CAAC,CAAC,CACzCC,eAAe,CAAC;EACfC,SAAS,EAAGC,OAAO,KAAM;IACvBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAKA,CAACC,IAAI,EAAE;QACV,OAAO;UACLC,GAAG,EAAE,OAAO;UACZC,MAAM,EAAE,MAAM;UACdF,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC,CAAC;IACFG,aAAa,EAAEP,OAAO,CAACE,QAAQ,CAAC;MAC9BC,KAAKA,CAACC,IAAI,EAAE;QACV,OAAO;UACLC,GAAG,EAAE,gBAAgB;UACrBC,MAAM,EAAE,MAAM;UACdF,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC,CAAC;IACFI,cAAc,EAAER,OAAO,CAACE,QAAQ,CAAC;MAC/BC,KAAKA,CAACC,IAAI,EAAE;QACV,OAAO;UACLC,GAAG,EAAE,gBAAgB;UACrBC,MAAM,EAAE,MAAM;UACdF,IAAI,EAAEA;QACR,CAAC;MACH;IACF,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AACJ,OAAO,MAAM;EACXK,gBAAgB;EAChBC,wBAAwB;EACxBC;AACF,CAAC,GAAGhB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}