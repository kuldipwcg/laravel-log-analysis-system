{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/@babel/runtime/regenerator/index.js\");\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.ReactTable = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n  function _asyncToGenerator(fn) {\n    return function () {\n      var self = this,\n        args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n        }\n        _next(undefined);\n      });\n    };\n  }\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  var renderErr = 'Renderer Error ☝️';\n  var actions = {\n    init: 'init'\n  };\n  var defaultRenderer = function defaultRenderer(_ref) {\n    var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value;\n    return value;\n  };\n  var emptyRenderer = function emptyRenderer() {\n    return React.createElement(React.Fragment, null, \"\\xA0\");\n  };\n  var defaultColumn = {\n    Cell: defaultRenderer,\n    width: 150,\n    minWidth: 0,\n    maxWidth: Number.MAX_SAFE_INTEGER\n  };\n  function mergeProps() {\n    for (var _len = arguments.length, propList = new Array(_len), _key = 0; _key < _len; _key++) {\n      propList[_key] = arguments[_key];\n    }\n    return propList.reduce(function (props, next) {\n      var style = next.style,\n        className = next.className,\n        rest = _objectWithoutPropertiesLoose(next, [\"style\", \"className\"]);\n      props = _extends({}, props, {}, rest);\n      if (style) {\n        props.style = props.style ? _extends({}, props.style || {}, {}, style || {}) : style;\n      }\n      if (className) {\n        props.className = props.className ? props.className + ' ' + className : className;\n      }\n      if (props.className === '') {\n        delete props.className;\n      }\n      return props;\n    }, {});\n  }\n  function handlePropGetter(prevProps, userProps, meta) {\n    // Handle a lambda, pass it the previous props\n    if (typeof userProps === 'function') {\n      return handlePropGetter({}, userProps(prevProps, meta));\n    } // Handle an array, merge each item as separate props\n\n    if (Array.isArray(userProps)) {\n      return mergeProps.apply(void 0, [prevProps].concat(userProps));\n    } // Handle an object by default, merge the two objects\n\n    return mergeProps(prevProps, userProps);\n  }\n  var makePropGetter = function makePropGetter(hooks, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return function (userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n      return [].concat(hooks, [userProps]).reduce(function (prev, next) {\n        return handlePropGetter(prev, next, _extends({}, meta, {\n          userProps: userProps\n        }));\n      }, {});\n    };\n  };\n  var reduceHooks = function reduceHooks(hooks, initial, meta, allowUndefined) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return hooks.reduce(function (prev, next) {\n      var nextValue = next(prev, meta);\n      {\n        if (!allowUndefined && typeof nextValue === 'undefined') {\n          console.info(next);\n          throw new Error('React Table: A reducer hook ☝️ just returned undefined! This is not allowed.');\n        }\n      }\n      return nextValue;\n    }, initial);\n  };\n  var loopHooks = function loopHooks(hooks, context, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return hooks.forEach(function (hook) {\n      var nextValue = hook(context, meta);\n      {\n        if (typeof nextValue !== 'undefined') {\n          console.info(hook, nextValue);\n          throw new Error('React Table: A loop-type hook ☝️ just returned a value! This is not allowed.');\n        }\n      }\n    });\n  };\n  function ensurePluginOrder(plugins, befores, pluginName, afters) {\n    if (afters) {\n      throw new Error(\"Defining plugins in the \\\"after\\\" section of ensurePluginOrder is no longer supported (see plugin \" + pluginName + \")\");\n    }\n    var pluginIndex = plugins.findIndex(function (plugin) {\n      return plugin.pluginName === pluginName;\n    });\n    if (pluginIndex === -1) {\n      {\n        throw new Error(\"The plugin \\\"\" + pluginName + \"\\\" was not found in the plugin list!\\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\\n\\n  \" + pluginName + \".pluginName = '\" + pluginName + \"'\\n\");\n      }\n    }\n    befores.forEach(function (before) {\n      var beforeIndex = plugins.findIndex(function (plugin) {\n        return plugin.pluginName === before;\n      });\n      if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n        {\n          throw new Error(\"React Table: The \" + pluginName + \" plugin hook must be placed after the \" + before + \" plugin hook!\");\n        }\n      }\n    });\n  }\n  function functionalUpdate(updater, old) {\n    return typeof updater === 'function' ? updater(old) : updater;\n  }\n  function useGetLatest(obj) {\n    var ref = React.useRef();\n    ref.current = obj;\n    return React.useCallback(function () {\n      return ref.current;\n    }, []);\n  } // SSR has issues with useLayoutEffect still, so use useEffect during SSR\n\n  var safeUseLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n  function useMountedLayoutEffect(fn, deps) {\n    var mountedRef = React.useRef(false);\n    safeUseLayoutEffect(function () {\n      if (mountedRef.current) {\n        fn();\n      }\n      mountedRef.current = true; // eslint-disable-next-line\n    }, deps);\n  }\n  function useAsyncDebounce(defaultFn, defaultWait) {\n    if (defaultWait === void 0) {\n      defaultWait = 0;\n    }\n    var debounceRef = React.useRef({});\n    var getDefaultFn = useGetLatest(defaultFn);\n    var getDefaultWait = useGetLatest(defaultWait);\n    return React.useCallback(/*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _len2,\n          args,\n          _key2,\n          _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = _args2[_key2];\n                }\n                if (!debounceRef.current.promise) {\n                  debounceRef.current.promise = new Promise(function (resolve, reject) {\n                    debounceRef.current.resolve = resolve;\n                    debounceRef.current.reject = reject;\n                  });\n                }\n                if (debounceRef.current.timeout) {\n                  clearTimeout(debounceRef.current.timeout);\n                }\n                debounceRef.current.timeout = setTimeout(/*#__PURE__*/\n                _asyncToGenerator(/*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          delete debounceRef.current.timeout;\n                          _context.prev = 1;\n                          _context.t0 = debounceRef.current;\n                          _context.next = 5;\n                          return getDefaultFn().apply(void 0, args);\n                        case 5:\n                          _context.t1 = _context.sent;\n                          _context.t0.resolve.call(_context.t0, _context.t1);\n                          _context.next = 12;\n                          break;\n                        case 9:\n                          _context.prev = 9;\n                          _context.t2 = _context[\"catch\"](1);\n                          debounceRef.current.reject(_context.t2);\n                        case 12:\n                          _context.prev = 12;\n                          delete debounceRef.current.promise;\n                          return _context.finish(12);\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 9, 12, 15]]);\n                })), getDefaultWait());\n                return _context2.abrupt(\"return\", debounceRef.current.promise);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function () {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [getDefaultFn, getDefaultWait]);\n  }\n  function makeRenderer(instance, column, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return function (type, userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n      var Comp = typeof type === 'string' ? column[type] : type;\n      if (typeof Comp === 'undefined') {\n        console.info(column);\n        throw new Error(renderErr);\n      }\n      return flexRender(Comp, _extends({}, instance, {\n        column: column\n      }, meta, {}, userProps));\n    };\n  }\n  function flexRender(Comp, props) {\n    return isReactComponent(Comp) ? React.createElement(Comp, props) : Comp;\n  }\n  function isReactComponent(component) {\n    return isClassComponent(component) || typeof component === 'function' || isExoticComponent(component);\n  }\n  function isClassComponent(component) {\n    return typeof component === 'function' && function () {\n      var proto = Object.getPrototypeOf(component);\n      return proto.prototype && proto.prototype.isReactComponent;\n    }();\n  }\n  function isExoticComponent(component) {\n    return typeof component === 'object' && typeof component.$$typeof === 'symbol' && ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description);\n  }\n  function linkColumnStructure(columns, parent, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    return columns.map(function (column) {\n      column = _extends({}, column, {\n        parent: parent,\n        depth: depth\n      });\n      assignColumnAccessor(column);\n      if (column.columns) {\n        column.columns = linkColumnStructure(column.columns, column, depth + 1);\n      }\n      return column;\n    });\n  }\n  function flattenColumns(columns) {\n    return flattenBy(columns, 'columns');\n  }\n  function assignColumnAccessor(column) {\n    // First check for string accessor\n    var id = column.id,\n      accessor = column.accessor,\n      Header = column.Header;\n    if (typeof accessor === 'string') {\n      id = id || accessor;\n      var accessorPath = accessor.split('.');\n      accessor = function accessor(row) {\n        return getBy(row, accessorPath);\n      };\n    }\n    if (!id && typeof Header === 'string' && Header) {\n      id = Header;\n    }\n    if (!id && column.columns) {\n      console.error(column);\n      throw new Error('A column ID (or unique \"Header\" value) is required!');\n    }\n    if (!id) {\n      console.error(column);\n      throw new Error('A column ID (or string accessor) is required!');\n    }\n    Object.assign(column, {\n      id: id,\n      accessor: accessor\n    });\n    return column;\n  }\n  function decorateColumn(column, userDefaultColumn) {\n    if (!userDefaultColumn) {\n      throw new Error();\n    }\n    Object.assign(column, _extends({\n      // Make sure there is a fallback header, just in case\n      Header: emptyRenderer,\n      Footer: emptyRenderer\n    }, defaultColumn, {}, userDefaultColumn, {}, column));\n    Object.assign(column, {\n      originalWidth: column.width\n    });\n    return column;\n  } // Build the header groups from the bottom up\n\n  function makeHeaderGroups(allColumns, defaultColumn, additionalHeaderProperties) {\n    if (additionalHeaderProperties === void 0) {\n      additionalHeaderProperties = function additionalHeaderProperties() {\n        return {};\n      };\n    }\n    var headerGroups = [];\n    var scanColumns = allColumns;\n    var uid = 0;\n    var getUID = function getUID() {\n      return uid++;\n    };\n    var _loop = function _loop() {\n      // The header group we are creating\n      var headerGroup = {\n        headers: []\n      }; // The parent columns we're going to scan next\n\n      var parentColumns = [];\n      var hasParents = scanColumns.some(function (d) {\n        return d.parent;\n      }); // Scan each column for parents\n\n      scanColumns.forEach(function (column) {\n        // What is the latest (last) parent column?\n        var latestParentColumn = [].concat(parentColumns).reverse()[0];\n        var newParent;\n        if (hasParents) {\n          // If the column has a parent, add it if necessary\n          if (column.parent) {\n            newParent = _extends({}, column.parent, {\n              originalId: column.parent.id,\n              id: column.parent.id + \"_\" + getUID(),\n              headers: [column]\n            }, additionalHeaderProperties(column));\n          } else {\n            // If other columns have parents, we'll need to add a place holder if necessary\n            var originalId = column.id + \"_placeholder\";\n            newParent = decorateColumn(_extends({\n              originalId: originalId,\n              id: column.id + \"_placeholder_\" + getUID(),\n              placeholderOf: column,\n              headers: [column]\n            }, additionalHeaderProperties(column)), defaultColumn);\n          } // If the resulting parent columns are the same, just add\n          // the column and increment the header span\n\n          if (latestParentColumn && latestParentColumn.originalId === newParent.originalId) {\n            latestParentColumn.headers.push(column);\n          } else {\n            parentColumns.push(newParent);\n          }\n        }\n        headerGroup.headers.push(column);\n      });\n      headerGroups.push(headerGroup); // Start scanning the parent columns\n\n      scanColumns = parentColumns;\n    };\n    while (scanColumns.length) {\n      _loop();\n    }\n    return headerGroups.reverse();\n  }\n  var pathObjCache = new Map();\n  function getBy(obj, path, def) {\n    if (!path) {\n      return obj;\n    }\n    var cacheKey = typeof path === 'function' ? path : JSON.stringify(path);\n    var pathObj = pathObjCache.get(cacheKey) || function () {\n      var pathObj = makePathArray(path);\n      pathObjCache.set(cacheKey, pathObj);\n      return pathObj;\n    }();\n    var val;\n    try {\n      val = pathObj.reduce(function (cursor, pathPart) {\n        return cursor[pathPart];\n      }, obj);\n    } catch (e) {// continue regardless of error\n    }\n    return typeof val !== 'undefined' ? val : def;\n  }\n  function getFirstDefined() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    for (var i = 0; i < args.length; i += 1) {\n      if (typeof args[i] !== 'undefined') {\n        return args[i];\n      }\n    }\n  }\n  function isFunction(a) {\n    if (typeof a === 'function') {\n      return a;\n    }\n  }\n  function flattenBy(arr, key) {\n    var flat = [];\n    var recurse = function recurse(arr) {\n      arr.forEach(function (d) {\n        if (!d[key]) {\n          flat.push(d);\n        } else {\n          recurse(d[key]);\n        }\n      });\n    };\n    recurse(arr);\n    return flat;\n  }\n  function expandRows(rows, _ref) {\n    var manualExpandedKey = _ref.manualExpandedKey,\n      expanded = _ref.expanded,\n      _ref$expandSubRows = _ref.expandSubRows,\n      expandSubRows = _ref$expandSubRows === void 0 ? true : _ref$expandSubRows;\n    var expandedRows = [];\n    var handleRow = function handleRow(row, addToExpandedRows) {\n      if (addToExpandedRows === void 0) {\n        addToExpandedRows = true;\n      }\n      row.isExpanded = row.original && row.original[manualExpandedKey] || expanded[row.id];\n      row.canExpand = row.subRows && !!row.subRows.length;\n      if (addToExpandedRows) {\n        expandedRows.push(row);\n      }\n      if (row.subRows && row.subRows.length && row.isExpanded) {\n        row.subRows.forEach(function (row) {\n          return handleRow(row, expandSubRows);\n        });\n      }\n    };\n    rows.forEach(function (row) {\n      return handleRow(row);\n    });\n    return expandedRows;\n  }\n  function getFilterMethod(filter, userFilterTypes, filterTypes) {\n    return isFunction(filter) || userFilterTypes[filter] || filterTypes[filter] || filterTypes.text;\n  }\n  function shouldAutoRemoveFilter(autoRemove, value, column) {\n    return autoRemove ? autoRemove(value, column) : typeof value === 'undefined';\n  }\n  function unpreparedAccessWarning() {\n    throw new Error('React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.');\n  }\n  var passiveSupported = null;\n  function passiveEventSupported() {\n    // memoize support to avoid adding multiple test events\n    if (typeof passiveSupported === 'boolean') return passiveSupported;\n    var supported = false;\n    try {\n      var options = {\n        get passive() {\n          supported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (err) {\n      supported = false;\n    }\n    passiveSupported = supported;\n    return passiveSupported;\n  } //\n\n  var reOpenBracket = /\\[/g;\n  var reCloseBracket = /\\]/g;\n  function makePathArray(obj) {\n    return flattenDeep(obj) // remove all periods in parts\n    .map(function (d) {\n      return String(d).replace('.', '_');\n    }) // join parts using period\n    .join('.') // replace brackets with periods\n    .replace(reOpenBracket, '.').replace(reCloseBracket, '') // split it back out on periods\n    .split('.');\n  }\n  function flattenDeep(arr, newArr) {\n    if (newArr === void 0) {\n      newArr = [];\n    }\n    if (!Array.isArray(arr)) {\n      newArr.push(arr);\n    } else {\n      for (var i = 0; i < arr.length; i += 1) {\n        flattenDeep(arr[i], newArr);\n      }\n    }\n    return newArr;\n  }\n  var defaultGetTableProps = function defaultGetTableProps(props) {\n    return _extends({\n      role: 'table'\n    }, props);\n  };\n  var defaultGetTableBodyProps = function defaultGetTableBodyProps(props) {\n    return _extends({\n      role: 'rowgroup'\n    }, props);\n  };\n  var defaultGetHeaderProps = function defaultGetHeaderProps(props, _ref) {\n    var column = _ref.column;\n    return _extends({\n      key: \"header_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount,\n      role: 'columnheader'\n    }, props);\n  };\n  var defaultGetFooterProps = function defaultGetFooterProps(props, _ref2) {\n    var column = _ref2.column;\n    return _extends({\n      key: \"footer_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount\n    }, props);\n  };\n  var defaultGetHeaderGroupProps = function defaultGetHeaderGroupProps(props, _ref3) {\n    var index = _ref3.index;\n    return _extends({\n      key: \"headerGroup_\" + index,\n      role: 'row'\n    }, props);\n  };\n  var defaultGetFooterGroupProps = function defaultGetFooterGroupProps(props, _ref4) {\n    var index = _ref4.index;\n    return _extends({\n      key: \"footerGroup_\" + index\n    }, props);\n  };\n  var defaultGetRowProps = function defaultGetRowProps(props, _ref5) {\n    var row = _ref5.row;\n    return _extends({\n      key: \"row_\" + row.id,\n      role: 'row'\n    }, props);\n  };\n  var defaultGetCellProps = function defaultGetCellProps(props, _ref6) {\n    var cell = _ref6.cell;\n    return _extends({\n      key: \"cell_\" + cell.row.id + \"_\" + cell.column.id,\n      role: 'cell'\n    }, props);\n  };\n  function makeDefaultPluginHooks() {\n    return {\n      useOptions: [],\n      stateReducers: [],\n      useControlledState: [],\n      columns: [],\n      columnsDeps: [],\n      allColumns: [],\n      allColumnsDeps: [],\n      accessValue: [],\n      materializedColumns: [],\n      materializedColumnsDeps: [],\n      useInstanceAfterData: [],\n      visibleColumns: [],\n      visibleColumnsDeps: [],\n      headerGroups: [],\n      headerGroupsDeps: [],\n      useInstanceBeforeDimensions: [],\n      useInstance: [],\n      prepareRow: [],\n      getTableProps: [defaultGetTableProps],\n      getTableBodyProps: [defaultGetTableBodyProps],\n      getHeaderGroupProps: [defaultGetHeaderGroupProps],\n      getFooterGroupProps: [defaultGetFooterGroupProps],\n      getHeaderProps: [defaultGetHeaderProps],\n      getFooterProps: [defaultGetFooterProps],\n      getRowProps: [defaultGetRowProps],\n      getCellProps: [defaultGetCellProps],\n      useFinalInstance: []\n    };\n  }\n  actions.resetHiddenColumns = 'resetHiddenColumns';\n  actions.toggleHideColumn = 'toggleHideColumn';\n  actions.setHiddenColumns = 'setHiddenColumns';\n  actions.toggleHideAllColumns = 'toggleHideAllColumns';\n  var useColumnVisibility = function useColumnVisibility(hooks) {\n    hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps];\n    hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps];\n    hooks.stateReducers.push(reducer);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions);\n    hooks.headerGroupsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.hiddenColumns]);\n    });\n    hooks.useInstance.push(useInstance);\n  };\n  useColumnVisibility.pluginName = 'useColumnVisibility';\n  var defaultGetToggleHiddenProps = function defaultGetToggleHiddenProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      onChange: function onChange(e) {\n        column.toggleHidden(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: column.isVisible,\n      title: 'Toggle Column Visible'\n    }];\n  };\n  var defaultGetToggleHideAllColumnsProps = function defaultGetToggleHideAllColumnsProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleHideAllColumns(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n      title: 'Toggle All Columns Hidden',\n      indeterminate: !instance.allColumnsHidden && instance.state.hiddenColumns.length\n    }];\n  };\n  function reducer(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        hiddenColumns: []\n      }, state);\n    }\n    if (action.type === actions.resetHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: instance.initialState.hiddenColumns || []\n      });\n    }\n    if (action.type === actions.toggleHideColumn) {\n      var should = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.includes(action.columnId);\n      var hiddenColumns = should ? [].concat(state.hiddenColumns, [action.columnId]) : state.hiddenColumns.filter(function (d) {\n        return d !== action.columnId;\n      });\n      return _extends({}, state, {\n        hiddenColumns: hiddenColumns\n      });\n    }\n    if (action.type === actions.setHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: functionalUpdate(action.value, state.hiddenColumns)\n      });\n    }\n    if (action.type === actions.toggleHideAllColumns) {\n      var shouldAll = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.length;\n      return _extends({}, state, {\n        hiddenColumns: shouldAll ? instance.allColumns.map(function (d) {\n          return d.id;\n        }) : []\n      });\n    }\n  }\n  function useInstanceBeforeDimensions(instance) {\n    var headers = instance.headers,\n      hiddenColumns = instance.state.hiddenColumns;\n    var isMountedRef = React.useRef(false);\n    if (!isMountedRef.current) ;\n    var handleColumn = function handleColumn(column, parentVisible) {\n      column.isVisible = parentVisible && !hiddenColumns.includes(column.id);\n      var totalVisibleHeaderCount = 0;\n      if (column.headers && column.headers.length) {\n        column.headers.forEach(function (subColumn) {\n          return totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible);\n        });\n      } else {\n        totalVisibleHeaderCount = column.isVisible ? 1 : 0;\n      }\n      column.totalVisibleHeaderCount = totalVisibleHeaderCount;\n      return totalVisibleHeaderCount;\n    };\n    var totalVisibleHeaderCount = 0;\n    headers.forEach(function (subHeader) {\n      return totalVisibleHeaderCount += handleColumn(subHeader, true);\n    });\n  }\n  function useInstance(instance) {\n    var columns = instance.columns,\n      flatHeaders = instance.flatHeaders,\n      dispatch = instance.dispatch,\n      allColumns = instance.allColumns,\n      getHooks = instance.getHooks,\n      hiddenColumns = instance.state.hiddenColumns,\n      _instance$autoResetHi = instance.autoResetHiddenColumns,\n      autoResetHiddenColumns = _instance$autoResetHi === void 0 ? true : _instance$autoResetHi;\n    var getInstance = useGetLatest(instance);\n    var allColumnsHidden = allColumns.length === hiddenColumns.length;\n    var toggleHideColumn = React.useCallback(function (columnId, value) {\n      return dispatch({\n        type: actions.toggleHideColumn,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setHiddenColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.setHiddenColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleHideAllColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleHideAllColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var getToggleHideAllColumnsProps = makePropGetter(getHooks().getToggleHideAllColumnsProps, {\n      instance: getInstance()\n    });\n    flatHeaders.forEach(function (column) {\n      column.toggleHidden = function (value) {\n        dispatch({\n          type: actions.toggleHideColumn,\n          columnId: column.id,\n          value: value\n        });\n      };\n      column.getToggleHiddenProps = makePropGetter(getHooks().getToggleHiddenProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    var getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetHiddenColumns()) {\n        dispatch({\n          type: actions.resetHiddenColumns\n        });\n      }\n    }, [dispatch, columns]);\n    Object.assign(instance, {\n      allColumnsHidden: allColumnsHidden,\n      toggleHideColumn: toggleHideColumn,\n      setHiddenColumns: setHiddenColumns,\n      toggleHideAllColumns: toggleHideAllColumns,\n      getToggleHideAllColumnsProps: getToggleHideAllColumnsProps\n    });\n  }\n  var defaultInitialState = {};\n  var defaultColumnInstance = {};\n  var defaultReducer = function defaultReducer(state, action, prevState) {\n    return state;\n  };\n  var defaultGetSubRows = function defaultGetSubRows(row, index) {\n    return row.subRows || [];\n  };\n  var defaultGetRowId = function defaultGetRowId(row, index, parent) {\n    return \"\" + (parent ? [parent.id, index].join('.') : index);\n  };\n  var defaultUseControlledState = function defaultUseControlledState(d) {\n    return d;\n  };\n  function applyDefaults(props) {\n    var _props$initialState = props.initialState,\n      initialState = _props$initialState === void 0 ? defaultInitialState : _props$initialState,\n      _props$defaultColumn = props.defaultColumn,\n      defaultColumn = _props$defaultColumn === void 0 ? defaultColumnInstance : _props$defaultColumn,\n      _props$getSubRows = props.getSubRows,\n      getSubRows = _props$getSubRows === void 0 ? defaultGetSubRows : _props$getSubRows,\n      _props$getRowId = props.getRowId,\n      getRowId = _props$getRowId === void 0 ? defaultGetRowId : _props$getRowId,\n      _props$stateReducer = props.stateReducer,\n      stateReducer = _props$stateReducer === void 0 ? defaultReducer : _props$stateReducer,\n      _props$useControlledS = props.useControlledState,\n      useControlledState = _props$useControlledS === void 0 ? defaultUseControlledState : _props$useControlledS,\n      rest = _objectWithoutPropertiesLoose(props, [\"initialState\", \"defaultColumn\", \"getSubRows\", \"getRowId\", \"stateReducer\", \"useControlledState\"]);\n    return _extends({}, rest, {\n      initialState: initialState,\n      defaultColumn: defaultColumn,\n      getSubRows: getSubRows,\n      getRowId: getRowId,\n      stateReducer: stateReducer,\n      useControlledState: useControlledState\n    });\n  }\n  var useTable = function useTable(props) {\n    for (var _len = arguments.length, plugins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      plugins[_key - 1] = arguments[_key];\n    }\n\n    // Apply default props\n    props = applyDefaults(props); // Add core plugins\n\n    plugins = [useColumnVisibility].concat(plugins); // Create the table instance\n\n    var instanceRef = React.useRef({}); // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n\n    var getInstance = useGetLatest(instanceRef.current); // Assign the props, plugins and hooks to the instance\n\n    Object.assign(getInstance(), _extends({}, props, {\n      plugins: plugins,\n      hooks: makeDefaultPluginHooks()\n    })); // Allow plugins to register hooks as early as possible\n\n    plugins.filter(Boolean).forEach(function (plugin) {\n      plugin(getInstance().hooks);\n    }); // Consume all hooks and make a getter for them\n\n    var getHooks = useGetLatest(getInstance().hooks);\n    getInstance().getHooks = getHooks;\n    delete getInstance().hooks; // Allow useOptions hooks to modify the options coming into the table\n\n    Object.assign(getInstance(), reduceHooks(getHooks().useOptions, applyDefaults(props)));\n    var _getInstance = getInstance(),\n      data = _getInstance.data,\n      userColumns = _getInstance.columns,\n      initialState = _getInstance.initialState,\n      defaultColumn = _getInstance.defaultColumn,\n      getSubRows = _getInstance.getSubRows,\n      getRowId = _getInstance.getRowId,\n      stateReducer = _getInstance.stateReducer,\n      useControlledState = _getInstance.useControlledState; // Setup user reducer ref\n\n    var getStateReducer = useGetLatest(stateReducer); // Build the reducer\n\n    var reducer = React.useCallback(function (state, action) {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({\n          action: action\n        });\n        throw new Error('Unknown Action 👆');\n      } // Reduce the state from all plugin reducers\n\n      return [].concat(getHooks().stateReducers, Array.isArray(getStateReducer()) ? getStateReducer() : [getStateReducer()]).reduce(function (s, handler) {\n        return handler(s, action, state, getInstance()) || s;\n      }, state);\n    }, [getHooks, getStateReducer, getInstance]); // Start the reducer\n\n    var _React$useReducer = React.useReducer(reducer, undefined, function () {\n        return reducer(initialState, {\n          type: actions.init\n        });\n      }),\n      reducerState = _React$useReducer[0],\n      dispatch = _React$useReducer[1]; // Allow the user to control the final state with hooks\n\n    var state = reduceHooks([].concat(getHooks().useControlledState, [useControlledState]), reducerState, {\n      instance: getInstance()\n    });\n    Object.assign(getInstance(), {\n      state: state,\n      dispatch: dispatch\n    }); // Decorate All the columns\n\n    var columns = React.useMemo(function () {\n      return linkColumnStructure(reduceHooks(getHooks().columns, userColumns, {\n        instance: getInstance()\n      }));\n    }, [getHooks, getInstance, userColumns].concat(reduceHooks(getHooks().columnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().columns = columns; // Get the flat list of all columns and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var allColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance()\n      }).map(assignColumnAccessor);\n    }, [columns, getHooks, getInstance].concat(reduceHooks(getHooks().allColumnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().allColumns = allColumns; // Access the row model using initial columns\n\n    var _React$useMemo = React.useMemo(function () {\n        var rows = [];\n        var flatRows = [];\n        var rowsById = {};\n        var allColumnsQueue = [].concat(allColumns);\n        while (allColumnsQueue.length) {\n          var column = allColumnsQueue.shift();\n          accessRowsForColumn({\n            data: data,\n            rows: rows,\n            flatRows: flatRows,\n            rowsById: rowsById,\n            column: column,\n            getRowId: getRowId,\n            getSubRows: getSubRows,\n            accessValueHooks: getHooks().accessValue,\n            getInstance: getInstance\n          });\n        }\n        return [rows, flatRows, rowsById];\n      }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance]),\n      rows = _React$useMemo[0],\n      flatRows = _React$useMemo[1],\n      rowsById = _React$useMemo[2];\n    Object.assign(getInstance(), {\n      rows: rows,\n      initialRows: [].concat(rows),\n      flatRows: flatRows,\n      rowsById: rowsById // materializedColumns,\n    });\n    loopHooks(getHooks().useInstanceAfterData, getInstance()); // Get the flat list of all columns AFTER the rows\n    // have been access, and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var visibleColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance()\n      }).map(function (d) {\n        return decorateColumn(d, defaultColumn);\n      });\n    }, [getHooks, allColumns, getInstance, defaultColumn].concat(reduceHooks(getHooks().visibleColumnsDeps, [], {\n      instance: getInstance()\n    }))); // Combine new visible columns with all columns\n\n    allColumns = React.useMemo(function () {\n      var columns = [].concat(visibleColumns);\n      allColumns.forEach(function (column) {\n        if (!columns.find(function (d) {\n          return d.id === column.id;\n        })) {\n          columns.push(column);\n        }\n      });\n      return columns;\n    }, [allColumns, visibleColumns]);\n    getInstance().allColumns = allColumns;\n    {\n      var duplicateColumns = allColumns.filter(function (column, i) {\n        return allColumns.findIndex(function (d) {\n          return d.id === column.id;\n        }) !== i;\n      });\n      if (duplicateColumns.length) {\n        console.info(allColumns);\n        throw new Error(\"Duplicate columns were found with ids: \\\"\" + duplicateColumns.map(function (d) {\n          return d.id;\n        }).join(', ') + \"\\\" in the columns array above\");\n      }\n    } // Make the headerGroups\n\n    var headerGroups = React.useMemo(function () {\n      return reduceHooks(getHooks().headerGroups, makeHeaderGroups(visibleColumns, defaultColumn), getInstance());\n    }, [getHooks, visibleColumns, defaultColumn, getInstance].concat(reduceHooks(getHooks().headerGroupsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().headerGroups = headerGroups; // Get the first level of headers\n\n    var headers = React.useMemo(function () {\n      return headerGroups.length ? headerGroups[0].headers : [];\n    }, [headerGroups]);\n    getInstance().headers = headers; // Provide a flat header list for utilities\n\n    getInstance().flatHeaders = headerGroups.reduce(function (all, headerGroup) {\n      return [].concat(all, headerGroup.headers);\n    }, []);\n    loopHooks(getHooks().useInstanceBeforeDimensions, getInstance()); // Filter columns down to visible ones\n\n    var visibleColumnsDep = visibleColumns.filter(function (d) {\n      return d.isVisible;\n    }).map(function (d) {\n      return d.id;\n    }).sort().join('_');\n    visibleColumns = React.useMemo(function () {\n      return visibleColumns.filter(function (d) {\n        return d.isVisible;\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]);\n    getInstance().visibleColumns = visibleColumns; // Header Visibility is needed by this point\n\n    var _calculateHeaderWidth = calculateHeaderWidths(headers),\n      totalColumnsMinWidth = _calculateHeaderWidth[0],\n      totalColumnsWidth = _calculateHeaderWidth[1],\n      totalColumnsMaxWidth = _calculateHeaderWidth[2];\n    getInstance().totalColumnsMinWidth = totalColumnsMinWidth;\n    getInstance().totalColumnsWidth = totalColumnsWidth;\n    getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth;\n    loopHooks(getHooks().useInstance, getInstance()) // Each materialized header needs to be assigned a render function and other\n    // prop getter properties here.\n    ;\n    [].concat(getInstance().flatHeaders, getInstance().allColumns).forEach(function (column) {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column); // Give columns/headers a default getHeaderProps\n\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column: column\n      }); // Give columns/headers a default getFooterProps\n\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    getInstance().headerGroups = React.useMemo(function () {\n      return headerGroups.filter(function (headerGroup, i) {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(function (column) {\n          var recurse = function recurse(headers) {\n            return headers.filter(function (column) {\n              if (column.headers) {\n                return recurse(column.headers);\n              }\n              return column.isVisible;\n            }).length;\n          };\n          if (column.headers) {\n            return recurse(column.headers);\n          }\n          return column.isVisible;\n        }); // Give headerGroups getRowProps\n\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(getHooks().getHeaderGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          headerGroup.getFooterGroupProps = makePropGetter(getHooks().getFooterGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          return true;\n        }\n        return false;\n      });\n    }, [headerGroups, getInstance, getHooks]);\n    getInstance().footerGroups = [].concat(getInstance().headerGroups).reverse(); // The prepareRow function is absolutely necessary and MUST be called on\n    // any rows the user wishes to be displayed.\n\n    getInstance().prepareRow = React.useCallback(function (row) {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row: row\n      }); // Build the visible cells for each row\n\n      row.allCells = allColumns.map(function (column) {\n        var value = row.values[column.id];\n        var cell = {\n          column: column,\n          row: row,\n          value: value\n        }; // Give each cell a getCellProps base\n\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell: cell\n        }); // Give each cell a renderer function (supports multiple renderers)\n\n        cell.render = makeRenderer(getInstance(), column, {\n          row: row,\n          cell: cell,\n          value: value\n        });\n        return cell;\n      });\n      row.cells = visibleColumns.map(function (column) {\n        return row.allCells.find(function (cell) {\n          return cell.column.id === column.id;\n        });\n      }); // need to apply any row specific hooks (useExpanded requires this)\n\n      loopHooks(getHooks().prepareRow, row, {\n        instance: getInstance()\n      });\n    }, [getHooks, getInstance, allColumns, visibleColumns]);\n    getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n      instance: getInstance()\n    });\n    getInstance().getTableBodyProps = makePropGetter(getHooks().getTableBodyProps, {\n      instance: getInstance()\n    });\n    loopHooks(getHooks().useFinalInstance, getInstance());\n    return getInstance();\n  };\n  function calculateHeaderWidths(headers, left) {\n    if (left === void 0) {\n      left = 0;\n    }\n    var sumTotalMinWidth = 0;\n    var sumTotalWidth = 0;\n    var sumTotalMaxWidth = 0;\n    var sumTotalFlexWidth = 0;\n    headers.forEach(function (header) {\n      var subHeaders = header.headers;\n      header.totalLeft = left;\n      if (subHeaders && subHeaders.length) {\n        var _calculateHeaderWidth2 = calculateHeaderWidths(subHeaders, left),\n          totalMinWidth = _calculateHeaderWidth2[0],\n          totalWidth = _calculateHeaderWidth2[1],\n          totalMaxWidth = _calculateHeaderWidth2[2],\n          totalFlexWidth = _calculateHeaderWidth2[3];\n        header.totalMinWidth = totalMinWidth;\n        header.totalWidth = totalWidth;\n        header.totalMaxWidth = totalMaxWidth;\n        header.totalFlexWidth = totalFlexWidth;\n      } else {\n        header.totalMinWidth = header.minWidth;\n        header.totalWidth = Math.min(Math.max(header.minWidth, header.width), header.maxWidth);\n        header.totalMaxWidth = header.maxWidth;\n        header.totalFlexWidth = header.canResize ? header.totalWidth : 0;\n      }\n      if (header.isVisible) {\n        left += header.totalWidth;\n        sumTotalMinWidth += header.totalMinWidth;\n        sumTotalWidth += header.totalWidth;\n        sumTotalMaxWidth += header.totalMaxWidth;\n        sumTotalFlexWidth += header.totalFlexWidth;\n      }\n    });\n    return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth];\n  }\n  function accessRowsForColumn(_ref) {\n    var data = _ref.data,\n      rows = _ref.rows,\n      flatRows = _ref.flatRows,\n      rowsById = _ref.rowsById,\n      column = _ref.column,\n      getRowId = _ref.getRowId,\n      getSubRows = _ref.getSubRows,\n      accessValueHooks = _ref.accessValueHooks,\n      getInstance = _ref.getInstance;\n\n    // Access the row's data column-by-column\n    // We do it this way so we can incrementally add materialized\n    // columns after the first pass and avoid excessive looping\n    var accessRow = function accessRow(originalRow, rowIndex, depth, parent, parentRows) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n\n      // Keep the original reference around\n      var original = originalRow;\n      var id = getRowId(originalRow, rowIndex, parent);\n      var row = rowsById[id]; // If the row hasn't been created, let's make it\n\n      if (!row) {\n        row = {\n          id: id,\n          original: original,\n          index: rowIndex,\n          depth: depth,\n          cells: [{}] // This is a dummy cell\n        }; // Override common array functions (and the dummy cell's getCellProps function)\n        // to show an error if it is accessed without calling prepareRow\n\n        row.cells.map = unpreparedAccessWarning;\n        row.cells.filter = unpreparedAccessWarning;\n        row.cells.forEach = unpreparedAccessWarning;\n        row.cells[0].getCellProps = unpreparedAccessWarning; // Create the cells and values\n\n        row.values = {}; // Push this row into the parentRows array\n\n        parentRows.push(row); // Keep track of every row in a flat array\n\n        flatRows.push(row); // Also keep track of every row by its ID\n\n        rowsById[id] = row; // Get the original subrows\n\n        row.originalSubRows = getSubRows(originalRow, rowIndex); // Then recursively access them\n\n        if (row.originalSubRows) {\n          var subRows = [];\n          row.originalSubRows.forEach(function (d, i) {\n            return accessRow(d, i, depth + 1, row, subRows);\n          }); // Keep the new subRows array on the row\n\n          row.subRows = subRows;\n        }\n      } else if (row.subRows) {\n        // If the row exists, then it's already been accessed\n        // Keep recursing, but don't worry about passing the\n        // accumlator array (those rows already exist)\n        row.originalSubRows.forEach(function (d, i) {\n          return accessRow(d, i, depth + 1, row);\n        });\n      } // If the column has an accessor, use it to get a value\n\n      if (column.accessor) {\n        row.values[column.id] = column.accessor(originalRow, rowIndex, row, parentRows, data);\n      } // Allow plugins to manipulate the column value\n\n      row.values[column.id] = reduceHooks(accessValueHooks, row.values[column.id], {\n        row: row,\n        column: column,\n        instance: getInstance()\n      }, true);\n    };\n    data.forEach(function (originalRow, rowIndex) {\n      return accessRow(originalRow, rowIndex, 0, undefined, rows);\n    });\n  }\n  actions.resetExpanded = 'resetExpanded';\n  actions.toggleRowExpanded = 'toggleRowExpanded';\n  actions.toggleAllRowsExpanded = 'toggleAllRowsExpanded';\n  var useExpanded = function useExpanded(hooks) {\n    hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps];\n    hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps];\n    hooks.stateReducers.push(reducer$1);\n    hooks.useInstance.push(useInstance$1);\n    hooks.prepareRow.push(prepareRow);\n  };\n  useExpanded.pluginName = 'useExpanded';\n  var defaultGetToggleAllRowsExpandedProps = function defaultGetToggleAllRowsExpandedProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      onClick: function onClick(e) {\n        instance.toggleAllRowsExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle All Rows Expanded'\n    }];\n  };\n  var defaultGetToggleRowExpandedProps = function defaultGetToggleRowExpandedProps(props, _ref2) {\n    var row = _ref2.row;\n    return [props, {\n      onClick: function onClick() {\n        row.toggleRowExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle Row Expanded'\n    }];\n  }; // Reducer\n\n  function reducer$1(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        expanded: {}\n      }, state);\n    }\n    if (action.type === actions.resetExpanded) {\n      return _extends({}, state, {\n        expanded: instance.initialState.expanded || {}\n      });\n    }\n    if (action.type === actions.toggleAllRowsExpanded) {\n      var value = action.value;\n      var rowsById = instance.rowsById;\n      var isAllRowsExpanded = Object.keys(rowsById).length === Object.keys(state.expanded).length;\n      var expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded;\n      if (expandAll) {\n        var expanded = {};\n        Object.keys(rowsById).forEach(function (rowId) {\n          expanded[rowId] = true;\n        });\n        return _extends({}, state, {\n          expanded: expanded\n        });\n      }\n      return _extends({}, state, {\n        expanded: {}\n      });\n    }\n    if (action.type === actions.toggleRowExpanded) {\n      var id = action.id,\n        setExpanded = action.value;\n      var exists = state.expanded[id];\n      var shouldExist = typeof setExpanded !== 'undefined' ? setExpanded : !exists;\n      if (!exists && shouldExist) {\n        var _extends2;\n        return _extends({}, state, {\n          expanded: _extends({}, state.expanded, (_extends2 = {}, _extends2[id] = true, _extends2))\n        });\n      } else if (exists && !shouldExist) {\n        var _state$expanded = state.expanded,\n          _ = _state$expanded[id],\n          rest = _objectWithoutPropertiesLoose(_state$expanded, [id].map(_toPropertyKey));\n        return _extends({}, state, {\n          expanded: rest\n        });\n      } else {\n        return state;\n      }\n    }\n  }\n  function useInstance$1(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      rowsById = instance.rowsById,\n      _instance$manualExpan = instance.manualExpandedKey,\n      manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n      _instance$paginateExp = instance.paginateExpandedRows,\n      paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n      _instance$expandSubRo = instance.expandSubRows,\n      expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n      _instance$autoResetEx = instance.autoResetExpanded,\n      autoResetExpanded = _instance$autoResetEx === void 0 ? true : _instance$autoResetEx,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      expanded = instance.state.expanded,\n      dispatch = instance.dispatch;\n    ensurePluginOrder(plugins, ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'], 'useExpanded');\n    var getAutoResetExpanded = useGetLatest(autoResetExpanded);\n    var isAllRowsExpanded = Boolean(Object.keys(rowsById).length && Object.keys(expanded).length);\n    if (isAllRowsExpanded) {\n      if (Object.keys(rowsById).some(function (id) {\n        return !expanded[id];\n      })) {\n        isAllRowsExpanded = false;\n      }\n    } // Bypass any effects from firing when this changes\n\n    useMountedLayoutEffect(function () {\n      if (getAutoResetExpanded()) {\n        dispatch({\n          type: actions.resetExpanded\n        });\n      }\n    }, [dispatch, data]);\n    var toggleRowExpanded = React.useCallback(function (id, value) {\n      dispatch({\n        type: actions.toggleRowExpanded,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllRowsExpanded = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsExpanded,\n        value: value\n      });\n    }, [dispatch]);\n    var expandedRows = React.useMemo(function () {\n      if (paginateExpandedRows) {\n        return expandRows(rows, {\n          manualExpandedKey: manualExpandedKey,\n          expanded: expanded,\n          expandSubRows: expandSubRows\n        });\n      }\n      return rows;\n    }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows]);\n    var expandedDepth = React.useMemo(function () {\n      return findExpandedDepth(expanded);\n    }, [expanded]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsExpandedProps = makePropGetter(getHooks().getToggleAllRowsExpandedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      preExpandedRows: rows,\n      expandedRows: expandedRows,\n      rows: expandedRows,\n      expandedDepth: expandedDepth,\n      isAllRowsExpanded: isAllRowsExpanded,\n      toggleRowExpanded: toggleRowExpanded,\n      toggleAllRowsExpanded: toggleAllRowsExpanded,\n      getToggleAllRowsExpandedProps: getToggleAllRowsExpandedProps\n    });\n  }\n  function prepareRow(row, _ref3) {\n    var getHooks = _ref3.instance.getHooks,\n      instance = _ref3.instance;\n    row.toggleRowExpanded = function (set) {\n      return instance.toggleRowExpanded(row.id, set);\n    };\n    row.getToggleRowExpandedProps = makePropGetter(getHooks().getToggleRowExpandedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n  function findExpandedDepth(expanded) {\n    var maxDepth = 0;\n    Object.keys(expanded).forEach(function (id) {\n      var splitId = id.split('.');\n      maxDepth = Math.max(maxDepth, splitId.length);\n    });\n    return maxDepth;\n  }\n  var text = function text(rows, ids, filterValue) {\n    rows = rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return String(rowValue).toLowerCase().includes(String(filterValue).toLowerCase());\n      });\n    });\n    return rows;\n  };\n  text.autoRemove = function (val) {\n    return !val;\n  };\n  var exactText = function exactText(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase() : true;\n      });\n    });\n  };\n  exactText.autoRemove = function (val) {\n    return !val;\n  };\n  var exactTextCase = function exactTextCase(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue) === String(filterValue) : true;\n      });\n    });\n  };\n  exactTextCase.autoRemove = function (val) {\n    return !val;\n  };\n  var includes = function includes(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue.includes(filterValue);\n      });\n    });\n  };\n  includes.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesAll = function includesAll(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.every(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n  includesAll.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesSome = function includesSome(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.some(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n  includesSome.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesValue = function includesValue(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return filterValue.includes(rowValue);\n      });\n    });\n  };\n  includesValue.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var exact = function exact(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue === filterValue;\n      });\n    });\n  };\n  exact.autoRemove = function (val) {\n    return typeof val === 'undefined';\n  };\n  var equals = function equals(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id]; // eslint-disable-next-line eqeqeq\n\n        return rowValue == filterValue;\n      });\n    });\n  };\n  equals.autoRemove = function (val) {\n    return val == null;\n  };\n  var between = function between(rows, ids, filterValue) {\n    var _ref = filterValue || [],\n      min = _ref[0],\n      max = _ref[1];\n    min = typeof min === 'number' ? min : -Infinity;\n    max = typeof max === 'number' ? max : Infinity;\n    if (min > max) {\n      var temp = min;\n      min = max;\n      max = temp;\n    }\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue >= min && rowValue <= max;\n      });\n    });\n  };\n  between.autoRemove = function (val) {\n    return !val || typeof val[0] !== 'number' && typeof val[1] !== 'number';\n  };\n  var filterTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    text: text,\n    exactText: exactText,\n    exactTextCase: exactTextCase,\n    includes: includes,\n    includesAll: includesAll,\n    includesSome: includesSome,\n    includesValue: includesValue,\n    exact: exact,\n    equals: equals,\n    between: between\n  });\n  actions.resetFilters = 'resetFilters';\n  actions.setFilter = 'setFilter';\n  actions.setAllFilters = 'setAllFilters';\n  var useFilters = function useFilters(hooks) {\n    hooks.stateReducers.push(reducer$2);\n    hooks.useInstance.push(useInstance$2);\n  };\n  useFilters.pluginName = 'useFilters';\n  function reducer$2(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        filters: []\n      }, state);\n    }\n    if (action.type === actions.resetFilters) {\n      return _extends({}, state, {\n        filters: instance.initialState.filters || []\n      });\n    }\n    if (action.type === actions.setFilter) {\n      var columnId = action.columnId,\n        filterValue = action.filterValue;\n      var allColumns = instance.allColumns,\n        userFilterTypes = instance.filterTypes;\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n      if (!column) {\n        throw new Error(\"React-Table: Could not find a column with id: \" + columnId);\n      }\n      var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n      var previousfilter = state.filters.find(function (d) {\n        return d.id === columnId;\n      });\n      var newFilter = functionalUpdate(filterValue, previousfilter && previousfilter.value); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n        return _extends({}, state, {\n          filters: state.filters.filter(function (d) {\n            return d.id !== columnId;\n          })\n        });\n      }\n      if (previousfilter) {\n        return _extends({}, state, {\n          filters: state.filters.map(function (d) {\n            if (d.id === columnId) {\n              return {\n                id: columnId,\n                value: newFilter\n              };\n            }\n            return d;\n          })\n        });\n      }\n      return _extends({}, state, {\n        filters: [].concat(state.filters, [{\n          id: columnId,\n          value: newFilter\n        }])\n      });\n    }\n    if (action.type === actions.setAllFilters) {\n      var filters = action.filters;\n      var _allColumns = instance.allColumns,\n        _userFilterTypes = instance.filterTypes;\n      return _extends({}, state, {\n        // Filter out undefined values\n        filters: functionalUpdate(filters, state.filters).filter(function (filter) {\n          var column = _allColumns.find(function (d) {\n            return d.id === filter.id;\n          });\n          var filterMethod = getFilterMethod(column.filter, _userFilterTypes || {}, filterTypes);\n          if (shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)) {\n            return false;\n          }\n          return true;\n        })\n      });\n    }\n  }\n  function useInstance$2(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      userFilterTypes = instance.filterTypes,\n      manualFilters = instance.manualFilters,\n      _instance$defaultCanF = instance.defaultCanFilter,\n      defaultCanFilter = _instance$defaultCanF === void 0 ? false : _instance$defaultCanF,\n      disableFilters = instance.disableFilters,\n      filters = instance.state.filters,\n      dispatch = instance.dispatch,\n      _instance$autoResetFi = instance.autoResetFilters,\n      autoResetFilters = _instance$autoResetFi === void 0 ? true : _instance$autoResetFi;\n    var setFilter = React.useCallback(function (columnId, filterValue) {\n      dispatch({\n        type: actions.setFilter,\n        columnId: columnId,\n        filterValue: filterValue\n      });\n    }, [dispatch]);\n    var setAllFilters = React.useCallback(function (filters) {\n      dispatch({\n        type: actions.setAllFilters,\n        filters: filters\n      });\n    }, [dispatch]);\n    allColumns.forEach(function (column) {\n      var id = column.id,\n        accessor = column.accessor,\n        columnDefaultCanFilter = column.defaultCanFilter,\n        columnDisableFilters = column.disableFilters; // Determine if a column is filterable\n\n      column.canFilter = accessor ? getFirstDefined(columnDisableFilters === true ? false : undefined, disableFilters === true ? false : undefined, true) : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false); // Provide the column a way of updating the filter value\n\n      column.setFilter = function (val) {\n        return setFilter(column.id, val);\n      }; // Provide the current filter value to the column for\n      // convenience\n\n      var found = filters.find(function (d) {\n        return d.id === id;\n      });\n      column.filterValue = found && found.value;\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualFilters || !filters.length) {\n          return [rows, flatRows, rowsById];\n        }\n        var filteredFlatRows = [];\n        var filteredRowsById = {}; // Filters top level and nested rows\n\n        var filterRows = function filterRows(rows, depth) {\n          if (depth === void 0) {\n            depth = 0;\n          }\n          var filteredRows = rows;\n          filteredRows = filters.reduce(function (filteredSoFar, _ref) {\n            var columnId = _ref.id,\n              filterValue = _ref.value;\n            // Find the filters column\n            var column = allColumns.find(function (d) {\n              return d.id === columnId;\n            });\n            if (!column) {\n              return filteredSoFar;\n            }\n            if (depth === 0) {\n              column.preFilteredRows = filteredSoFar;\n            }\n            var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n            if (!filterMethod) {\n              console.warn(\"Could not find a valid 'column.filter' for column with the ID: \" + column.id + \".\");\n              return filteredSoFar;\n            } // Pass the rows, id, filterValue and column to the filterMethod\n            // to get the filtered rows back\n\n            column.filteredRows = filterMethod(filteredSoFar, [columnId], filterValue);\n            return column.filteredRows;\n          }, rows); // Apply the filter to any subRows\n          // We technically could do this recursively in the above loop,\n          // but that would severely hinder the API for the user, since they\n          // would be required to do that recursion in some scenarios\n\n          filteredRows.forEach(function (row) {\n            filteredFlatRows.push(row);\n            filteredRowsById[row.id] = row;\n            if (!row.subRows) {\n              return;\n            }\n            row.subRows = row.subRows && row.subRows.length > 0 ? filterRows(row.subRows, depth + 1) : row.subRows;\n          });\n          return filteredRows;\n        };\n        return [filterRows(rows), filteredFlatRows, filteredRowsById];\n      }, [manualFilters, filters, rows, flatRows, rowsById, allColumns, userFilterTypes]),\n      filteredRows = _React$useMemo[0],\n      filteredFlatRows = _React$useMemo[1],\n      filteredRowsById = _React$useMemo[2];\n    React.useMemo(function () {\n      // Now that each filtered column has it's partially filtered rows,\n      // lets assign the final filtered rows to all of the other columns\n      var nonFilteredColumns = allColumns.filter(function (column) {\n        return !filters.find(function (d) {\n          return d.id === column.id;\n        });\n      }); // This essentially enables faceted filter options to be built easily\n      // using every column's preFilteredRows value\n\n      nonFilteredColumns.forEach(function (column) {\n        column.preFilteredRows = filteredRows;\n        column.filteredRows = filteredRows;\n      });\n    }, [filteredRows, filters, allColumns]);\n    var getAutoResetFilters = useGetLatest(autoResetFilters);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetFilters()) {\n        dispatch({\n          type: actions.resetFilters\n        });\n      }\n    }, [dispatch, manualFilters ? null : data]);\n    Object.assign(instance, {\n      preFilteredRows: rows,\n      preFilteredFlatRows: flatRows,\n      preFilteredRowsById: rowsById,\n      filteredRows: filteredRows,\n      filteredFlatRows: filteredFlatRows,\n      filteredRowsById: filteredRowsById,\n      rows: filteredRows,\n      flatRows: filteredFlatRows,\n      rowsById: filteredRowsById,\n      setFilter: setFilter,\n      setAllFilters: setAllFilters\n    });\n  }\n  actions.resetGlobalFilter = 'resetGlobalFilter';\n  actions.setGlobalFilter = 'setGlobalFilter';\n  var useGlobalFilter = function useGlobalFilter(hooks) {\n    hooks.stateReducers.push(reducer$3);\n    hooks.useInstance.push(useInstance$3);\n  };\n  useGlobalFilter.pluginName = 'useGlobalFilter';\n  function reducer$3(state, action, previousState, instance) {\n    if (action.type === actions.resetGlobalFilter) {\n      return _extends({}, state, {\n        globalFilter: instance.initialState.globalFilter || undefined\n      });\n    }\n    if (action.type === actions.setGlobalFilter) {\n      var filterValue = action.filterValue;\n      var userFilterTypes = instance.userFilterTypes;\n      var filterMethod = getFilterMethod(instance.globalFilter, userFilterTypes || {}, filterTypes);\n      var newFilter = functionalUpdate(filterValue, state.globalFilter); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n        var globalFilter = state.globalFilter,\n          stateWithoutGlobalFilter = _objectWithoutPropertiesLoose(state, [\"globalFilter\"]);\n        return stateWithoutGlobalFilter;\n      }\n      return _extends({}, state, {\n        globalFilter: newFilter\n      });\n    }\n  }\n  function useInstance$3(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      userFilterTypes = instance.filterTypes,\n      globalFilter = instance.globalFilter,\n      manualGlobalFilter = instance.manualGlobalFilter,\n      globalFilterValue = instance.state.globalFilter,\n      dispatch = instance.dispatch,\n      _instance$autoResetGl = instance.autoResetGlobalFilter,\n      autoResetGlobalFilter = _instance$autoResetGl === void 0 ? true : _instance$autoResetGl,\n      disableGlobalFilter = instance.disableGlobalFilter;\n    var setGlobalFilter = React.useCallback(function (filterValue) {\n      dispatch({\n        type: actions.setGlobalFilter,\n        filterValue: filterValue\n      });\n    }, [dispatch]); // TODO: Create a filter cache for incremental high speed multi-filtering\n    // This gets pretty complicated pretty fast, since you have to maintain a\n    // cache for each row group (top-level rows, and each row's recursive subrows)\n    // This would make multi-filtering a lot faster though. Too far?\n\n    var _React$useMemo = React.useMemo(function () {\n        if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n          return [rows, flatRows, rowsById];\n        }\n        var filteredFlatRows = [];\n        var filteredRowsById = {};\n        var filterMethod = getFilterMethod(globalFilter, userFilterTypes || {}, filterTypes);\n        if (!filterMethod) {\n          console.warn(\"Could not find a valid 'globalFilter' option.\");\n          return rows;\n        }\n        allColumns.forEach(function (column) {\n          var columnDisableGlobalFilter = column.disableGlobalFilter;\n          column.canFilter = getFirstDefined(columnDisableGlobalFilter === true ? false : undefined, disableGlobalFilter === true ? false : undefined, true);\n        });\n        var filterableColumns = allColumns.filter(function (c) {\n          return c.canFilter === true;\n        }); // Filters top level and nested rows\n\n        var filterRows = function filterRows(filteredRows) {\n          filteredRows = filterMethod(filteredRows, filterableColumns.map(function (d) {\n            return d.id;\n          }), globalFilterValue);\n          filteredRows.forEach(function (row) {\n            filteredFlatRows.push(row);\n            filteredRowsById[row.id] = row;\n            row.subRows = row.subRows && row.subRows.length ? filterRows(row.subRows) : row.subRows;\n          });\n          return filteredRows;\n        };\n        return [filterRows(rows), filteredFlatRows, filteredRowsById];\n      }, [manualGlobalFilter, globalFilterValue, globalFilter, userFilterTypes, allColumns, rows, flatRows, rowsById, disableGlobalFilter]),\n      globalFilteredRows = _React$useMemo[0],\n      globalFilteredFlatRows = _React$useMemo[1],\n      globalFilteredRowsById = _React$useMemo[2];\n    var getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGlobalFilter()) {\n        dispatch({\n          type: actions.resetGlobalFilter\n        });\n      }\n    }, [dispatch, manualGlobalFilter ? null : data]);\n    Object.assign(instance, {\n      preGlobalFilteredRows: rows,\n      preGlobalFilteredFlatRows: flatRows,\n      preGlobalFilteredRowsById: rowsById,\n      globalFilteredRows: globalFilteredRows,\n      globalFilteredFlatRows: globalFilteredFlatRows,\n      globalFilteredRowsById: globalFilteredRowsById,\n      rows: globalFilteredRows,\n      flatRows: globalFilteredFlatRows,\n      rowsById: globalFilteredRowsById,\n      setGlobalFilter: setGlobalFilter,\n      disableGlobalFilter: disableGlobalFilter\n    });\n  }\n  function sum(values, aggregatedValues) {\n    // It's faster to just add the aggregations together instead of\n    // process leaf nodes individually\n    return aggregatedValues.reduce(function (sum, next) {\n      return sum + (typeof next === 'number' ? next : 0);\n    }, 0);\n  }\n  function min(values) {\n    var min = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n      }\n    });\n    return min;\n  }\n  function max(values) {\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        max = Math.max(max, value);\n      }\n    });\n    return max;\n  }\n  function minMax(values) {\n    var min = values[0] || 0;\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    });\n    return min + \"..\" + max;\n  }\n  function average(values) {\n    return sum(null, values) / values.length;\n  }\n  function median(values) {\n    if (!values.length) {\n      return null;\n    }\n    var mid = Math.floor(values.length / 2);\n    var nums = [].concat(values).sort(function (a, b) {\n      return a - b;\n    });\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n  }\n  function unique(values) {\n    return Array.from(new Set(values).values());\n  }\n  function uniqueCount(values) {\n    return new Set(values).size;\n  }\n  function count(values) {\n    return values.length;\n  }\n  var aggregations = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sum: sum,\n    min: min,\n    max: max,\n    minMax: minMax,\n    average: average,\n    median: median,\n    unique: unique,\n    uniqueCount: uniqueCount,\n    count: count\n  });\n  var emptyArray = [];\n  var emptyObject = {}; // Actions\n\n  actions.resetGroupBy = 'resetGroupBy';\n  actions.setGroupBy = 'setGroupBy';\n  actions.toggleGroupBy = 'toggleGroupBy';\n  var useGroupBy = function useGroupBy(hooks) {\n    hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps];\n    hooks.stateReducers.push(reducer$4);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.groupBy]);\n    });\n    hooks.visibleColumns.push(visibleColumns);\n    hooks.useInstance.push(useInstance$4);\n    hooks.prepareRow.push(prepareRow$1);\n  };\n  useGroupBy.pluginName = 'useGroupBy';\n  var defaultGetGroupByToggleProps = function defaultGetGroupByToggleProps(props, _ref2) {\n    var header = _ref2.header;\n    return [props, {\n      onClick: header.canGroupBy ? function (e) {\n        e.persist();\n        header.toggleGroupBy();\n      } : undefined,\n      style: {\n        cursor: header.canGroupBy ? 'pointer' : undefined\n      },\n      title: 'Toggle GroupBy'\n    }];\n  }; // Reducer\n\n  function reducer$4(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        groupBy: []\n      }, state);\n    }\n    if (action.type === actions.resetGroupBy) {\n      return _extends({}, state, {\n        groupBy: instance.initialState.groupBy || []\n      });\n    }\n    if (action.type === actions.setGroupBy) {\n      var value = action.value;\n      return _extends({}, state, {\n        groupBy: value\n      });\n    }\n    if (action.type === actions.toggleGroupBy) {\n      var columnId = action.columnId,\n        setGroupBy = action.value;\n      var resolvedGroupBy = typeof setGroupBy !== 'undefined' ? setGroupBy : !state.groupBy.includes(columnId);\n      if (resolvedGroupBy) {\n        return _extends({}, state, {\n          groupBy: [].concat(state.groupBy, [columnId])\n        });\n      }\n      return _extends({}, state, {\n        groupBy: state.groupBy.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n  function visibleColumns(columns, _ref3) {\n    var groupBy = _ref3.instance.state.groupBy;\n    // Sort grouped columns to the start of the column list\n    // before the headers are built\n    var groupByColumns = groupBy.map(function (g) {\n      return columns.find(function (col) {\n        return col.id === g;\n      });\n    }).filter(Boolean);\n    var nonGroupByColumns = columns.filter(function (col) {\n      return !groupBy.includes(col.id);\n    });\n    columns = [].concat(groupByColumns, nonGroupByColumns);\n    columns.forEach(function (column) {\n      column.isGrouped = groupBy.includes(column.id);\n      column.groupedIndex = groupBy.indexOf(column.id);\n    });\n    return columns;\n  }\n  var defaultUserAggregations = {};\n  function useInstance$4(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      flatHeaders = instance.flatHeaders,\n      _instance$groupByFn = instance.groupByFn,\n      groupByFn = _instance$groupByFn === void 0 ? defaultGroupByFn : _instance$groupByFn,\n      manualGroupBy = instance.manualGroupBy,\n      _instance$aggregation = instance.aggregations,\n      userAggregations = _instance$aggregation === void 0 ? defaultUserAggregations : _instance$aggregation,\n      plugins = instance.plugins,\n      groupBy = instance.state.groupBy,\n      dispatch = instance.dispatch,\n      _instance$autoResetGr = instance.autoResetGroupBy,\n      autoResetGroupBy = _instance$autoResetGr === void 0 ? true : _instance$autoResetGr,\n      disableGroupBy = instance.disableGroupBy,\n      defaultCanGroupBy = instance.defaultCanGroupBy,\n      getHooks = instance.getHooks;\n    ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnGroupBy = column.defaultGroupBy,\n        columnDisableGroupBy = column.disableGroupBy;\n      column.canGroupBy = accessor ? getFirstDefined(column.canGroupBy, columnDisableGroupBy === true ? false : undefined, disableGroupBy === true ? false : undefined, true) : getFirstDefined(column.canGroupBy, defaultColumnGroupBy, defaultCanGroupBy, false);\n      if (column.canGroupBy) {\n        column.toggleGroupBy = function () {\n          return instance.toggleGroupBy(column.id);\n        };\n      }\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n    var toggleGroupBy = React.useCallback(function (columnId, value) {\n      dispatch({\n        type: actions.toggleGroupBy,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setGroupBy = React.useCallback(function (value) {\n      dispatch({\n        type: actions.setGroupBy,\n        value: value\n      });\n    }, [dispatch]);\n    flatHeaders.forEach(function (header) {\n      header.getGroupByToggleProps = makePropGetter(getHooks().getGroupByToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualGroupBy || !groupBy.length) {\n          return [rows, flatRows, rowsById, emptyArray, emptyObject, flatRows, rowsById];\n        } // Ensure that the list of filtered columns exist\n\n        var existingGroupBy = groupBy.filter(function (g) {\n          return allColumns.find(function (col) {\n            return col.id === g;\n          });\n        }); // Find the columns that can or are aggregating\n        // Uses each column to aggregate rows into a single value\n\n        var aggregateRowsToValues = function aggregateRowsToValues(leafRows, groupedRows, depth) {\n          var values = {};\n          allColumns.forEach(function (column) {\n            // Don't aggregate columns that are in the groupBy\n            if (existingGroupBy.includes(column.id)) {\n              values[column.id] = groupedRows[0] ? groupedRows[0].values[column.id] : null;\n              return;\n            } // Aggregate the values\n\n            var aggregateFn = typeof column.aggregate === 'function' ? column.aggregate : userAggregations[column.aggregate] || aggregations[column.aggregate];\n            if (aggregateFn) {\n              // Get the columnValues to aggregate\n              var groupedValues = groupedRows.map(function (row) {\n                return row.values[column.id];\n              }); // Get the columnValues to aggregate\n\n              var leafValues = leafRows.map(function (row) {\n                var columnValue = row.values[column.id];\n                if (!depth && column.aggregateValue) {\n                  var aggregateValueFn = typeof column.aggregateValue === 'function' ? column.aggregateValue : userAggregations[column.aggregateValue] || aggregations[column.aggregateValue];\n                  if (!aggregateValueFn) {\n                    console.info({\n                      column: column\n                    });\n                    throw new Error(\"React Table: Invalid column.aggregateValue option for column listed above\");\n                  }\n                  columnValue = aggregateValueFn(columnValue, row, column);\n                }\n                return columnValue;\n              });\n              values[column.id] = aggregateFn(leafValues, groupedValues);\n            } else if (column.aggregate) {\n              console.info({\n                column: column\n              });\n              throw new Error(\"React Table: Invalid column.aggregate option for column listed above\");\n            } else {\n              values[column.id] = null;\n            }\n          });\n          return values;\n        };\n        var groupedFlatRows = [];\n        var groupedRowsById = {};\n        var onlyGroupedFlatRows = [];\n        var onlyGroupedRowsById = {};\n        var nonGroupedFlatRows = [];\n        var nonGroupedRowsById = {}; // Recursively group the data\n\n        var groupUpRecursively = function groupUpRecursively(rows, depth, parentId) {\n          if (depth === void 0) {\n            depth = 0;\n          }\n\n          // This is the last level, just return the rows\n          if (depth === existingGroupBy.length) {\n            return rows.map(function (row) {\n              return _extends({}, row, {\n                depth: depth\n              });\n            });\n          }\n          var columnId = existingGroupBy[depth]; // Group the rows together for this level\n\n          var rowGroupsMap = groupByFn(rows, columnId); // Peform aggregations for each group\n\n          var aggregatedGroupedRows = Object.entries(rowGroupsMap).map(function (_ref4, index) {\n            var groupByVal = _ref4[0],\n              groupedRows = _ref4[1];\n            var id = columnId + \":\" + groupByVal;\n            id = parentId ? parentId + \">\" + id : id; // First, Recurse to group sub rows before aggregation\n\n            var subRows = groupUpRecursively(groupedRows, depth + 1, id); // Flatten the leaf rows of the rows in this group\n\n            var leafRows = depth ? flattenBy(groupedRows, 'leafRows') : groupedRows;\n            var values = aggregateRowsToValues(leafRows, groupedRows, depth);\n            var row = {\n              id: id,\n              isGrouped: true,\n              groupByID: columnId,\n              groupByVal: groupByVal,\n              values: values,\n              subRows: subRows,\n              leafRows: leafRows,\n              depth: depth,\n              index: index\n            };\n            subRows.forEach(function (subRow) {\n              groupedFlatRows.push(subRow);\n              groupedRowsById[subRow.id] = subRow;\n              if (subRow.isGrouped) {\n                onlyGroupedFlatRows.push(subRow);\n                onlyGroupedRowsById[subRow.id] = subRow;\n              } else {\n                nonGroupedFlatRows.push(subRow);\n                nonGroupedRowsById[subRow.id] = subRow;\n              }\n            });\n            return row;\n          });\n          return aggregatedGroupedRows;\n        };\n        var groupedRows = groupUpRecursively(rows);\n        groupedRows.forEach(function (subRow) {\n          groupedFlatRows.push(subRow);\n          groupedRowsById[subRow.id] = subRow;\n          if (subRow.isGrouped) {\n            onlyGroupedFlatRows.push(subRow);\n            onlyGroupedRowsById[subRow.id] = subRow;\n          } else {\n            nonGroupedFlatRows.push(subRow);\n            nonGroupedRowsById[subRow.id] = subRow;\n          }\n        }); // Assign the new data\n\n        return [groupedRows, groupedFlatRows, groupedRowsById, onlyGroupedFlatRows, onlyGroupedRowsById, nonGroupedFlatRows, nonGroupedRowsById];\n      }, [manualGroupBy, groupBy, rows, flatRows, rowsById, allColumns, userAggregations, groupByFn]),\n      groupedRows = _React$useMemo[0],\n      groupedFlatRows = _React$useMemo[1],\n      groupedRowsById = _React$useMemo[2],\n      onlyGroupedFlatRows = _React$useMemo[3],\n      onlyGroupedRowsById = _React$useMemo[4],\n      nonGroupedFlatRows = _React$useMemo[5],\n      nonGroupedRowsById = _React$useMemo[6];\n    var getAutoResetGroupBy = useGetLatest(autoResetGroupBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGroupBy()) {\n        dispatch({\n          type: actions.resetGroupBy\n        });\n      }\n    }, [dispatch, manualGroupBy ? null : data]);\n    Object.assign(instance, {\n      preGroupedRows: rows,\n      preGroupedFlatRow: flatRows,\n      preGroupedRowsById: rowsById,\n      groupedRows: groupedRows,\n      groupedFlatRows: groupedFlatRows,\n      groupedRowsById: groupedRowsById,\n      onlyGroupedFlatRows: onlyGroupedFlatRows,\n      onlyGroupedRowsById: onlyGroupedRowsById,\n      nonGroupedFlatRows: nonGroupedFlatRows,\n      nonGroupedRowsById: nonGroupedRowsById,\n      rows: groupedRows,\n      flatRows: groupedFlatRows,\n      rowsById: groupedRowsById,\n      toggleGroupBy: toggleGroupBy,\n      setGroupBy: setGroupBy\n    });\n  }\n  function prepareRow$1(row) {\n    row.allCells.forEach(function (cell) {\n      var _row$subRows;\n\n      // Grouped cells are in the groupBy and the pivot cell for the row\n      cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID; // Placeholder cells are any columns in the groupBy that are not grouped\n\n      cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped; // Aggregated cells are not grouped, not repeated, but still have subRows\n\n      cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && ((_row$subRows = row.subRows) == null ? void 0 : _row$subRows.length);\n    });\n  }\n  function defaultGroupByFn(rows, columnId) {\n    return rows.reduce(function (prev, row, i) {\n      // TODO: Might want to implement a key serializer here so\n      // irregular column values can still be grouped if needed?\n      var resKey = \"\" + row.values[columnId];\n      prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : [];\n      prev[resKey].push(row);\n      return prev;\n    }, {});\n  }\n  var reSplitAlphaNumeric = /([0-9]+)/gm; // Mixed sorting is slow, but very inclusive of many edge cases.\n  // It handles numbers, mixed alphanumeric combinations, and even\n  // null, undefined, and Infinity\n\n  var alphanumeric = function alphanumeric(rowA, rowB, columnId) {\n    var _getRowValuesByColumn = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn[0],\n      b = _getRowValuesByColumn[1]; // Force to strings (or \"\" for unsupported types)\n\n    a = toString(a);\n    b = toString(b); // Split on number groups, but keep the delimiter\n    // Then remove falsey split values\n\n    a = a.split(reSplitAlphaNumeric).filter(Boolean);\n    b = b.split(reSplitAlphaNumeric).filter(Boolean); // While\n\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var an = parseInt(aa, 10);\n      var bn = parseInt(bb, 10);\n      var combo = [an, bn].sort(); // Both are string\n\n      if (isNaN(combo[0])) {\n        if (aa > bb) {\n          return 1;\n        }\n        if (bb > aa) {\n          return -1;\n        }\n        continue;\n      } // One is a string, one is a number\n\n      if (isNaN(combo[1])) {\n        return isNaN(an) ? -1 : 1;\n      } // Both are numbers\n\n      if (an > bn) {\n        return 1;\n      }\n      if (bn > an) {\n        return -1;\n      }\n    }\n    return a.length - b.length;\n  };\n  function datetime(rowA, rowB, columnId) {\n    var _getRowValuesByColumn2 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn2[0],\n      b = _getRowValuesByColumn2[1];\n    a = a.getTime();\n    b = b.getTime();\n    return compareBasic(a, b);\n  }\n  function basic(rowA, rowB, columnId) {\n    var _getRowValuesByColumn3 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn3[0],\n      b = _getRowValuesByColumn3[1];\n    return compareBasic(a, b);\n  }\n  function string(rowA, rowB, columnId) {\n    var _getRowValuesByColumn4 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn4[0],\n      b = _getRowValuesByColumn4[1];\n    a = a.split('').filter(Boolean);\n    b = b.split('').filter(Boolean);\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var alower = aa.toLowerCase();\n      var blower = bb.toLowerCase(); // Case insensitive comparison until characters match\n\n      if (alower > blower) {\n        return 1;\n      }\n      if (blower > alower) {\n        return -1;\n      } // If lowercase characters are identical\n\n      if (aa > bb) {\n        return 1;\n      }\n      if (bb > aa) {\n        return -1;\n      }\n      continue;\n    }\n    return a.length - b.length;\n  }\n  function number(rowA, rowB, columnId) {\n    var _getRowValuesByColumn5 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn5[0],\n      b = _getRowValuesByColumn5[1];\n    var replaceNonNumeric = /[^0-9.]/gi;\n    a = Number(String(a).replace(replaceNonNumeric, ''));\n    b = Number(String(b).replace(replaceNonNumeric, ''));\n    return compareBasic(a, b);\n  } // Utils\n\n  function compareBasic(a, b) {\n    return a === b ? 0 : a > b ? 1 : -1;\n  }\n  function getRowValuesByColumnID(row1, row2, columnId) {\n    return [row1.values[columnId], row2.values[columnId]];\n  }\n  function toString(a) {\n    if (typeof a === 'number') {\n      if (isNaN(a) || a === Infinity || a === -Infinity) {\n        return '';\n      }\n      return String(a);\n    }\n    if (typeof a === 'string') {\n      return a;\n    }\n    return '';\n  }\n  var sortTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    alphanumeric: alphanumeric,\n    datetime: datetime,\n    basic: basic,\n    string: string,\n    number: number\n  });\n  actions.resetSortBy = 'resetSortBy';\n  actions.setSortBy = 'setSortBy';\n  actions.toggleSortBy = 'toggleSortBy';\n  actions.clearSortBy = 'clearSortBy';\n  defaultColumn.sortType = 'alphanumeric';\n  defaultColumn.sortDescFirst = false;\n  var useSortBy = function useSortBy(hooks) {\n    hooks.getSortByToggleProps = [defaultGetSortByToggleProps];\n    hooks.stateReducers.push(reducer$5);\n    hooks.useInstance.push(useInstance$5);\n  };\n  useSortBy.pluginName = 'useSortBy';\n  var defaultGetSortByToggleProps = function defaultGetSortByToggleProps(props, _ref) {\n    var instance = _ref.instance,\n      column = _ref.column;\n    var _instance$isMultiSort = instance.isMultiSortEvent,\n      isMultiSortEvent = _instance$isMultiSort === void 0 ? function (e) {\n        return e.shiftKey;\n      } : _instance$isMultiSort;\n    return [props, {\n      onClick: column.canSort ? function (e) {\n        e.persist();\n        column.toggleSortBy(undefined, !instance.disableMultiSort && isMultiSortEvent(e));\n      } : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined\n    }];\n  }; // Reducer\n\n  function reducer$5(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        sortBy: []\n      }, state);\n    }\n    if (action.type === actions.resetSortBy) {\n      return _extends({}, state, {\n        sortBy: instance.initialState.sortBy || []\n      });\n    }\n    if (action.type === actions.clearSortBy) {\n      var sortBy = state.sortBy;\n      var newSortBy = sortBy.filter(function (d) {\n        return d.id !== action.columnId;\n      });\n      return _extends({}, state, {\n        sortBy: newSortBy\n      });\n    }\n    if (action.type === actions.setSortBy) {\n      var _sortBy = action.sortBy;\n      return _extends({}, state, {\n        sortBy: _sortBy\n      });\n    }\n    if (action.type === actions.toggleSortBy) {\n      var columnId = action.columnId,\n        desc = action.desc,\n        multi = action.multi;\n      var allColumns = instance.allColumns,\n        disableMultiSort = instance.disableMultiSort,\n        disableSortRemove = instance.disableSortRemove,\n        disableMultiRemove = instance.disableMultiRemove,\n        _instance$maxMultiSor = instance.maxMultiSortColCount,\n        maxMultiSortColCount = _instance$maxMultiSor === void 0 ? Number.MAX_SAFE_INTEGER : _instance$maxMultiSor;\n      var _sortBy2 = state.sortBy; // Find the column for this columnId\n\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n      var sortDescFirst = column.sortDescFirst; // Find any existing sortBy for this column\n\n      var existingSortBy = _sortBy2.find(function (d) {\n        return d.id === columnId;\n      });\n      var existingIndex = _sortBy2.findIndex(function (d) {\n        return d.id === columnId;\n      });\n      var hasDescDefined = typeof desc !== 'undefined' && desc !== null;\n      var _newSortBy = []; // What should we do with this sort action?\n\n      var sortAction;\n      if (!disableMultiSort && multi) {\n        if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'add';\n        }\n      } else {\n        // Normal mode\n        if (existingIndex !== _sortBy2.length - 1 || _sortBy2.length !== 1) {\n          sortAction = 'replace';\n        } else if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'replace';\n        }\n      } // Handle toggle states that will remove the sortBy\n\n      if (sortAction === 'toggle' &&\n      // Must be toggling\n      !disableSortRemove &&\n      // If disableSortRemove, disable in general\n      !hasDescDefined && (\n      // Must not be setting desc\n      multi ? !disableMultiRemove : true) && (\n      // If multi, don't allow if disableMultiRemove\n      existingSortBy &&\n      // Finally, detect if it should indeed be removed\n      existingSortBy.desc && !sortDescFirst || !existingSortBy.desc && sortDescFirst)) {\n        sortAction = 'remove';\n      }\n      if (sortAction === 'replace') {\n        _newSortBy = [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }];\n      } else if (sortAction === 'add') {\n        _newSortBy = [].concat(_sortBy2, [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }]); // Take latest n columns\n\n        _newSortBy.splice(0, _newSortBy.length - maxMultiSortColCount);\n      } else if (sortAction === 'toggle') {\n        // This flips (or sets) the\n        _newSortBy = _sortBy2.map(function (d) {\n          if (d.id === columnId) {\n            return _extends({}, d, {\n              desc: hasDescDefined ? desc : !existingSortBy.desc\n            });\n          }\n          return d;\n        });\n      } else if (sortAction === 'remove') {\n        _newSortBy = _sortBy2.filter(function (d) {\n          return d.id !== columnId;\n        });\n      }\n      return _extends({}, state, {\n        sortBy: _newSortBy\n      });\n    }\n  }\n  function useInstance$5(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      allColumns = instance.allColumns,\n      _instance$orderByFn = instance.orderByFn,\n      orderByFn = _instance$orderByFn === void 0 ? defaultOrderByFn : _instance$orderByFn,\n      userSortTypes = instance.sortTypes,\n      manualSortBy = instance.manualSortBy,\n      defaultCanSort = instance.defaultCanSort,\n      disableSortBy = instance.disableSortBy,\n      flatHeaders = instance.flatHeaders,\n      sortBy = instance.state.sortBy,\n      dispatch = instance.dispatch,\n      plugins = instance.plugins,\n      getHooks = instance.getHooks,\n      _instance$autoResetSo = instance.autoResetSortBy,\n      autoResetSortBy = _instance$autoResetSo === void 0 ? true : _instance$autoResetSo;\n    ensurePluginOrder(plugins, ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'], 'useSortBy');\n    var setSortBy = React.useCallback(function (sortBy) {\n      dispatch({\n        type: actions.setSortBy,\n        sortBy: sortBy\n      });\n    }, [dispatch]); // Updates sorting based on a columnId, desc flag and multi flag\n\n    var toggleSortBy = React.useCallback(function (columnId, desc, multi) {\n      dispatch({\n        type: actions.toggleSortBy,\n        columnId: columnId,\n        desc: desc,\n        multi: multi\n      });\n    }, [dispatch]); // use reference to avoid memory leak in #1608\n\n    var getInstance = useGetLatest(instance); // Add the getSortByToggleProps method to columns and headers\n\n    flatHeaders.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnCanSort = column.canSort,\n        columnDisableSortBy = column.disableSortBy,\n        id = column.id;\n      var canSort = accessor ? getFirstDefined(columnDisableSortBy === true ? false : undefined, disableSortBy === true ? false : undefined, true) : getFirstDefined(defaultCanSort, defaultColumnCanSort, false);\n      column.canSort = canSort;\n      if (column.canSort) {\n        column.toggleSortBy = function (desc, multi) {\n          return toggleSortBy(column.id, desc, multi);\n        };\n        column.clearSortBy = function () {\n          dispatch({\n            type: actions.clearSortBy,\n            columnId: column.id\n          });\n        };\n      }\n      column.getSortByToggleProps = makePropGetter(getHooks().getSortByToggleProps, {\n        instance: getInstance(),\n        column: column\n      });\n      var columnSort = sortBy.find(function (d) {\n        return d.id === id;\n      });\n      column.isSorted = !!columnSort;\n      column.sortedIndex = sortBy.findIndex(function (d) {\n        return d.id === id;\n      });\n      column.isSortedDesc = column.isSorted ? columnSort.desc : undefined;\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualSortBy || !sortBy.length) {\n          return [rows, flatRows];\n        }\n        var sortedFlatRows = []; // Filter out sortBys that correspond to non existing columns\n\n        var availableSortBy = sortBy.filter(function (sort) {\n          return allColumns.find(function (col) {\n            return col.id === sort.id;\n          });\n        });\n        var sortData = function sortData(rows) {\n          // Use the orderByFn to compose multiple sortBy's together.\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          var sortedData = orderByFn(rows, availableSortBy.map(function (sort) {\n            // Support custom sorting methods for each column\n            var column = allColumns.find(function (d) {\n              return d.id === sort.id;\n            });\n            if (!column) {\n              throw new Error(\"React-Table: Could not find a column with id: \" + sort.id + \" while sorting\");\n            }\n            var sortType = column.sortType; // Look up sortBy functions in this order:\n            // column function\n            // column string lookup on user sortType\n            // column string lookup on built-in sortType\n            // default function\n            // default string lookup on user sortType\n            // default string lookup on built-in sortType\n\n            var sortMethod = isFunction(sortType) || (userSortTypes || {})[sortType] || sortTypes[sortType];\n            if (!sortMethod) {\n              throw new Error(\"React-Table: Could not find a valid sortType of '\" + sortType + \"' for column '\" + sort.id + \"'.\");\n            } // Return the correct sortFn.\n            // This function should always return in ascending order\n\n            return function (a, b) {\n              return sortMethod(a, b, sort.id, sort.desc);\n            };\n          }),\n          // Map the directions\n          availableSortBy.map(function (sort) {\n            // Detect and use the sortInverted option\n            var column = allColumns.find(function (d) {\n              return d.id === sort.id;\n            });\n            if (column && column.sortInverted) {\n              return sort.desc;\n            }\n            return !sort.desc;\n          })); // If there are sub-rows, sort them\n\n          sortedData.forEach(function (row) {\n            sortedFlatRows.push(row);\n            if (!row.subRows || row.subRows.length === 0) {\n              return;\n            }\n            row.subRows = sortData(row.subRows);\n          });\n          return sortedData;\n        };\n        return [sortData(rows), sortedFlatRows];\n      }, [manualSortBy, sortBy, rows, flatRows, allColumns, orderByFn, userSortTypes]),\n      sortedRows = _React$useMemo[0],\n      sortedFlatRows = _React$useMemo[1];\n    var getAutoResetSortBy = useGetLatest(autoResetSortBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSortBy()) {\n        dispatch({\n          type: actions.resetSortBy\n        });\n      }\n    }, [manualSortBy ? null : data]);\n    Object.assign(instance, {\n      preSortedRows: rows,\n      preSortedFlatRows: flatRows,\n      sortedRows: sortedRows,\n      sortedFlatRows: sortedFlatRows,\n      rows: sortedRows,\n      flatRows: sortedFlatRows,\n      setSortBy: setSortBy,\n      toggleSortBy: toggleSortBy\n    });\n  }\n  function defaultOrderByFn(arr, funcs, dirs) {\n    return [].concat(arr).sort(function (rowA, rowB) {\n      for (var i = 0; i < funcs.length; i += 1) {\n        var sortFn = funcs[i];\n        var desc = dirs[i] === false || dirs[i] === 'desc';\n        var sortInt = sortFn(rowA, rowB);\n        if (sortInt !== 0) {\n          return desc ? -sortInt : sortInt;\n        }\n      }\n      return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index;\n    });\n  }\n  var pluginName = 'usePagination'; // Actions\n\n  actions.resetPage = 'resetPage';\n  actions.gotoPage = 'gotoPage';\n  actions.setPageSize = 'setPageSize';\n  var usePagination = function usePagination(hooks) {\n    hooks.stateReducers.push(reducer$6);\n    hooks.useInstance.push(useInstance$6);\n  };\n  usePagination.pluginName = pluginName;\n  function reducer$6(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pageSize: 10,\n        pageIndex: 0\n      }, state);\n    }\n    if (action.type === actions.resetPage) {\n      return _extends({}, state, {\n        pageIndex: instance.initialState.pageIndex || 0\n      });\n    }\n    if (action.type === actions.gotoPage) {\n      var pageCount = instance.pageCount,\n        page = instance.page;\n      var newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex);\n      var canNavigate = false;\n      if (newPageIndex > state.pageIndex) {\n        // next page\n        canNavigate = pageCount === -1 ? page.length >= state.pageSize : newPageIndex < pageCount;\n      } else if (newPageIndex < state.pageIndex) {\n        // prev page\n        canNavigate = newPageIndex > -1;\n      }\n      if (!canNavigate) {\n        return state;\n      }\n      return _extends({}, state, {\n        pageIndex: newPageIndex\n      });\n    }\n    if (action.type === actions.setPageSize) {\n      var pageSize = action.pageSize;\n      var topRowIndex = state.pageSize * state.pageIndex;\n      var pageIndex = Math.floor(topRowIndex / pageSize);\n      return _extends({}, state, {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      });\n    }\n  }\n  function useInstance$6(instance) {\n    var rows = instance.rows,\n      _instance$autoResetPa = instance.autoResetPage,\n      autoResetPage = _instance$autoResetPa === void 0 ? true : _instance$autoResetPa,\n      _instance$manualExpan = instance.manualExpandedKey,\n      manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n      plugins = instance.plugins,\n      userPageCount = instance.pageCount,\n      _instance$paginateExp = instance.paginateExpandedRows,\n      paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n      _instance$expandSubRo = instance.expandSubRows,\n      expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n      _instance$state = instance.state,\n      pageSize = _instance$state.pageSize,\n      pageIndex = _instance$state.pageIndex,\n      expanded = _instance$state.expanded,\n      globalFilter = _instance$state.globalFilter,\n      filters = _instance$state.filters,\n      groupBy = _instance$state.groupBy,\n      sortBy = _instance$state.sortBy,\n      dispatch = instance.dispatch,\n      data = instance.data,\n      manualPagination = instance.manualPagination;\n    ensurePluginOrder(plugins, ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'], 'usePagination');\n    var getAutoResetPage = useGetLatest(autoResetPage);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPage()) {\n        dispatch({\n          type: actions.resetPage\n        });\n      }\n    }, [dispatch, manualPagination ? null : data, globalFilter, filters, groupBy, sortBy]);\n    var pageCount = manualPagination ? userPageCount : Math.ceil(rows.length / pageSize);\n    var pageOptions = React.useMemo(function () {\n      return pageCount > 0 ? [].concat(new Array(pageCount)).fill(null).map(function (d, i) {\n        return i;\n      }) : [];\n    }, [pageCount]);\n    var page = React.useMemo(function () {\n      var page;\n      if (manualPagination) {\n        page = rows;\n      } else {\n        var pageStart = pageSize * pageIndex;\n        var pageEnd = pageStart + pageSize;\n        page = rows.slice(pageStart, pageEnd);\n      }\n      if (paginateExpandedRows) {\n        return page;\n      }\n      return expandRows(page, {\n        manualExpandedKey: manualExpandedKey,\n        expanded: expanded,\n        expandSubRows: expandSubRows\n      });\n    }, [expandSubRows, expanded, manualExpandedKey, manualPagination, pageIndex, pageSize, paginateExpandedRows, rows]);\n    var canPreviousPage = pageIndex > 0;\n    var canNextPage = pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1;\n    var gotoPage = React.useCallback(function (pageIndex) {\n      dispatch({\n        type: actions.gotoPage,\n        pageIndex: pageIndex\n      });\n    }, [dispatch]);\n    var previousPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old - 1;\n      });\n    }, [gotoPage]);\n    var nextPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old + 1;\n      });\n    }, [gotoPage]);\n    var setPageSize = React.useCallback(function (pageSize) {\n      dispatch({\n        type: actions.setPageSize,\n        pageSize: pageSize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      pageOptions: pageOptions,\n      pageCount: pageCount,\n      page: page,\n      canPreviousPage: canPreviousPage,\n      canNextPage: canNextPage,\n      gotoPage: gotoPage,\n      previousPage: previousPage,\n      nextPage: nextPage,\n      setPageSize: setPageSize\n    });\n  }\n  actions.resetPivot = 'resetPivot';\n  actions.togglePivot = 'togglePivot';\n  var _UNSTABLE_usePivotColumns = function _UNSTABLE_usePivotColumns(hooks) {\n    hooks.getPivotToggleProps = [defaultGetPivotToggleProps];\n    hooks.stateReducers.push(reducer$7);\n    hooks.useInstanceAfterData.push(useInstanceAfterData);\n    hooks.allColumns.push(allColumns);\n    hooks.accessValue.push(accessValue);\n    hooks.materializedColumns.push(materializedColumns);\n    hooks.materializedColumnsDeps.push(materializedColumnsDeps);\n    hooks.visibleColumns.push(visibleColumns$1);\n    hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n    hooks.useInstance.push(useInstance$7);\n    hooks.prepareRow.push(prepareRow$2);\n  };\n  _UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns';\n  var defaultPivotColumns = [];\n  var defaultGetPivotToggleProps = function defaultGetPivotToggleProps(props, _ref) {\n    var header = _ref.header;\n    return [props, {\n      onClick: header.canPivot ? function (e) {\n        e.persist();\n        header.togglePivot();\n      } : undefined,\n      style: {\n        cursor: header.canPivot ? 'pointer' : undefined\n      },\n      title: 'Toggle Pivot'\n    }];\n  }; // Reducer\n\n  function reducer$7(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pivotColumns: defaultPivotColumns\n      }, state);\n    }\n    if (action.type === actions.resetPivot) {\n      return _extends({}, state, {\n        pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns\n      });\n    }\n    if (action.type === actions.togglePivot) {\n      var columnId = action.columnId,\n        setPivot = action.value;\n      var resolvedPivot = typeof setPivot !== 'undefined' ? setPivot : !state.pivotColumns.includes(columnId);\n      if (resolvedPivot) {\n        return _extends({}, state, {\n          pivotColumns: [].concat(state.pivotColumns, [columnId])\n        });\n      }\n      return _extends({}, state, {\n        pivotColumns: state.pivotColumns.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n  function useInstanceAfterData(instance) {\n    instance.allColumns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n    });\n  }\n  function allColumns(columns, _ref2) {\n    var instance = _ref2.instance;\n    columns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n      column.uniqueValues = new Set();\n    });\n    return columns;\n  }\n  function accessValue(value, _ref3) {\n    var column = _ref3.column;\n    if (column.uniqueValues && typeof value !== 'undefined') {\n      column.uniqueValues.add(value);\n    }\n    return value;\n  }\n  function materializedColumns(materialized, _ref4) {\n    var instance = _ref4.instance;\n    var allColumns = instance.allColumns,\n      state = instance.state;\n    if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n      return materialized;\n    }\n    var pivotColumns = state.pivotColumns.map(function (id) {\n      return allColumns.find(function (d) {\n        return d.id === id;\n      });\n    }).filter(Boolean);\n    var sourceColumns = allColumns.filter(function (d) {\n      return !d.isPivotSource && !state.groupBy.includes(d.id) && !state.pivotColumns.includes(d.id);\n    });\n    var buildPivotColumns = function buildPivotColumns(depth, parent, pivotFilters) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      if (pivotFilters === void 0) {\n        pivotFilters = [];\n      }\n      var pivotColumn = pivotColumns[depth];\n      if (!pivotColumn) {\n        return sourceColumns.map(function (sourceColumn) {\n          // TODO: We could offer support here for renesting pivoted\n          // columns inside copies of their header groups. For now,\n          // that seems like it would be (1) overkill on nesting, considering\n          // you already get nesting for every pivot level and (2)\n          // really hard. :)\n          return _extends({}, sourceColumn, {\n            canPivot: false,\n            isPivoted: true,\n            parent: parent,\n            depth: depth,\n            id: \"\" + (parent ? parent.id + \".\" + sourceColumn.id : sourceColumn.id),\n            accessor: function accessor(originalRow, i, row) {\n              if (pivotFilters.every(function (filter) {\n                return filter(row);\n              })) {\n                return row.values[sourceColumn.id];\n              }\n            }\n          });\n        });\n      }\n      var uniqueValues = Array.from(pivotColumn.uniqueValues).sort();\n      return uniqueValues.map(function (uniqueValue) {\n        var columnGroup = _extends({}, pivotColumn, {\n          Header: pivotColumn.PivotHeader || typeof pivotColumn.header === 'string' ? pivotColumn.Header + \": \" + uniqueValue : uniqueValue,\n          isPivotGroup: true,\n          parent: parent,\n          depth: depth,\n          id: parent ? parent.id + \".\" + pivotColumn.id + \".\" + uniqueValue : pivotColumn.id + \".\" + uniqueValue,\n          pivotValue: uniqueValue\n        });\n        columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [].concat(pivotFilters, [function (row) {\n          return row.values[pivotColumn.id] === uniqueValue;\n        }]));\n        return columnGroup;\n      });\n    };\n    var newMaterialized = flattenColumns(buildPivotColumns());\n    return [].concat(materialized, newMaterialized);\n  }\n  function materializedColumnsDeps(deps, _ref5) {\n    var _ref5$instance$state = _ref5.instance.state,\n      pivotColumns = _ref5$instance$state.pivotColumns,\n      groupBy = _ref5$instance$state.groupBy;\n    return [].concat(deps, [pivotColumns, groupBy]);\n  }\n  function visibleColumns$1(visibleColumns, _ref6) {\n    var state = _ref6.instance.state;\n    visibleColumns = visibleColumns.filter(function (d) {\n      return !d.isPivotSource;\n    });\n    if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n      visibleColumns = visibleColumns.filter(function (column) {\n        return column.isGrouped || column.isPivoted;\n      });\n    }\n    return visibleColumns;\n  }\n  function visibleColumnsDeps(deps, _ref7) {\n    var instance = _ref7.instance;\n    return [].concat(deps, [instance.state.pivotColumns, instance.state.groupBy]);\n  }\n  function useInstance$7(instance) {\n    var columns = instance.columns,\n      allColumns = instance.allColumns,\n      flatHeaders = instance.flatHeaders,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      dispatch = instance.dispatch,\n      _instance$autoResetPi = instance.autoResetPivot,\n      autoResetPivot = _instance$autoResetPi === void 0 ? true : _instance$autoResetPi,\n      manaulPivot = instance.manaulPivot,\n      disablePivot = instance.disablePivot,\n      defaultCanPivot = instance.defaultCanPivot;\n    ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnPivot = column.defaultPivot,\n        columnDisablePivot = column.disablePivot;\n      column.canPivot = accessor ? getFirstDefined(column.canPivot, columnDisablePivot === true ? false : undefined, disablePivot === true ? false : undefined, true) : getFirstDefined(column.canPivot, defaultColumnPivot, defaultCanPivot, false);\n      if (column.canPivot) {\n        column.togglePivot = function () {\n          return instance.togglePivot(column.id);\n        };\n      }\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n    var togglePivot = function togglePivot(columnId, value) {\n      dispatch({\n        type: actions.togglePivot,\n        columnId: columnId,\n        value: value\n      });\n    };\n    flatHeaders.forEach(function (header) {\n      header.getPivotToggleProps = makePropGetter(getHooks().getPivotToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n    var getAutoResetPivot = useGetLatest(autoResetPivot);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPivot()) {\n        dispatch({\n          type: actions.resetPivot\n        });\n      }\n    }, [dispatch, manaulPivot ? null : columns]);\n    Object.assign(instance, {\n      togglePivot: togglePivot\n    });\n  }\n  function prepareRow$2(row) {\n    row.allCells.forEach(function (cell) {\n      // Grouped cells are in the pivotColumns and the pivot cell for the row\n      cell.isPivoted = cell.column.isPivoted;\n    });\n  }\n  var pluginName$1 = 'useRowSelect'; // Actions\n\n  actions.resetSelectedRows = 'resetSelectedRows';\n  actions.toggleAllRowsSelected = 'toggleAllRowsSelected';\n  actions.toggleRowSelected = 'toggleRowSelected';\n  actions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected';\n  var useRowSelect = function useRowSelect(hooks) {\n    hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps];\n    hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps];\n    hooks.getToggleAllPageRowsSelectedProps = [defaultGetToggleAllPageRowsSelectedProps];\n    hooks.stateReducers.push(reducer$8);\n    hooks.useInstance.push(useInstance$8);\n    hooks.prepareRow.push(prepareRow$3);\n  };\n  useRowSelect.pluginName = pluginName$1;\n  var defaultGetToggleRowSelectedProps = function defaultGetToggleRowSelectedProps(props, _ref) {\n    var instance = _ref.instance,\n      row = _ref.row;\n    var _instance$manualRowSe = instance.manualRowSelectedKey,\n      manualRowSelectedKey = _instance$manualRowSe === void 0 ? 'isSelected' : _instance$manualRowSe;\n    var checked = false;\n    if (row.original && row.original[manualRowSelectedKey]) {\n      checked = true;\n    } else {\n      checked = row.isSelected;\n    }\n    return [props, {\n      onChange: function onChange(e) {\n        row.toggleRowSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected\n    }];\n  };\n  var defaultGetToggleAllRowsSelectedProps = function defaultGetToggleAllRowsSelectedProps(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllRowsSelected,\n      title: 'Toggle All Rows Selected',\n      indeterminate: Boolean(!instance.isAllRowsSelected && Object.keys(instance.state.selectedRowIds).length)\n    }];\n  };\n  var defaultGetToggleAllPageRowsSelectedProps = function defaultGetToggleAllPageRowsSelectedProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllPageRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllPageRowsSelected,\n      title: 'Toggle All Current Page Rows Selected',\n      indeterminate: Boolean(!instance.isAllPageRowsSelected && instance.page.some(function (_ref4) {\n        var id = _ref4.id;\n        return instance.state.selectedRowIds[id];\n      }))\n    }];\n  }; // eslint-disable-next-line max-params\n\n  function reducer$8(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        selectedRowIds: {}\n      }, state);\n    }\n    if (action.type === actions.resetSelectedRows) {\n      return _extends({}, state, {\n        selectedRowIds: instance.initialState.selectedRowIds || {}\n      });\n    }\n    if (action.type === actions.toggleAllRowsSelected) {\n      var setSelected = action.value;\n      var isAllRowsSelected = instance.isAllRowsSelected,\n        rowsById = instance.rowsById,\n        _instance$nonGroupedR = instance.nonGroupedRowsById,\n        nonGroupedRowsById = _instance$nonGroupedR === void 0 ? rowsById : _instance$nonGroupedR;\n      var selectAll = typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected; // Only remove/add the rows that are visible on the screen\n      //  Leave all the other rows that are selected alone.\n\n      var selectedRowIds = Object.assign({}, state.selectedRowIds);\n      if (selectAll) {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          selectedRowIds[rowId] = true;\n        });\n      } else {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          delete selectedRowIds[rowId];\n        });\n      }\n      return _extends({}, state, {\n        selectedRowIds: selectedRowIds\n      });\n    }\n    if (action.type === actions.toggleRowSelected) {\n      var id = action.id,\n        _setSelected = action.value;\n      var _rowsById = instance.rowsById,\n        _instance$selectSubRo = instance.selectSubRows,\n        selectSubRows = _instance$selectSubRo === void 0 ? true : _instance$selectSubRo,\n        getSubRows = instance.getSubRows;\n      var isSelected = state.selectedRowIds[id];\n      var shouldExist = typeof _setSelected !== 'undefined' ? _setSelected : !isSelected;\n      if (isSelected === shouldExist) {\n        return state;\n      }\n      var newSelectedRowIds = _extends({}, state.selectedRowIds);\n      var handleRowById = function handleRowById(id) {\n        var row = _rowsById[id];\n        if (row) {\n          if (!row.isGrouped) {\n            if (shouldExist) {\n              newSelectedRowIds[id] = true;\n            } else {\n              delete newSelectedRowIds[id];\n            }\n          }\n          if (selectSubRows && getSubRows(row)) {\n            return getSubRows(row).forEach(function (row) {\n              return handleRowById(row.id);\n            });\n          }\n        }\n      };\n      handleRowById(id);\n      return _extends({}, state, {\n        selectedRowIds: newSelectedRowIds\n      });\n    }\n    if (action.type === actions.toggleAllPageRowsSelected) {\n      var _setSelected2 = action.value;\n      var page = instance.page,\n        _rowsById2 = instance.rowsById,\n        _instance$selectSubRo2 = instance.selectSubRows,\n        _selectSubRows = _instance$selectSubRo2 === void 0 ? true : _instance$selectSubRo2,\n        isAllPageRowsSelected = instance.isAllPageRowsSelected,\n        _getSubRows = instance.getSubRows;\n      var _selectAll = typeof _setSelected2 !== 'undefined' ? _setSelected2 : !isAllPageRowsSelected;\n      var _newSelectedRowIds = _extends({}, state.selectedRowIds);\n      var _handleRowById = function _handleRowById(id) {\n        var row = _rowsById2[id];\n        if (!row.isGrouped) {\n          if (_selectAll) {\n            _newSelectedRowIds[id] = true;\n          } else {\n            delete _newSelectedRowIds[id];\n          }\n        }\n        if (_selectSubRows && _getSubRows(row)) {\n          return _getSubRows(row).forEach(function (row) {\n            return _handleRowById(row.id);\n          });\n        }\n      };\n      page.forEach(function (row) {\n        return _handleRowById(row.id);\n      });\n      return _extends({}, state, {\n        selectedRowIds: _newSelectedRowIds\n      });\n    }\n    return state;\n  }\n  function useInstance$8(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      rowsById = instance.rowsById,\n      _instance$nonGroupedR2 = instance.nonGroupedRowsById,\n      nonGroupedRowsById = _instance$nonGroupedR2 === void 0 ? rowsById : _instance$nonGroupedR2,\n      _instance$autoResetSe = instance.autoResetSelectedRows,\n      autoResetSelectedRows = _instance$autoResetSe === void 0 ? true : _instance$autoResetSe,\n      selectedRowIds = instance.state.selectedRowIds,\n      _instance$selectSubRo3 = instance.selectSubRows,\n      selectSubRows = _instance$selectSubRo3 === void 0 ? true : _instance$selectSubRo3,\n      dispatch = instance.dispatch,\n      page = instance.page,\n      getSubRows = instance.getSubRows;\n    ensurePluginOrder(plugins, ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'], 'useRowSelect');\n    var selectedFlatRows = React.useMemo(function () {\n      var selectedFlatRows = [];\n      rows.forEach(function (row) {\n        var isSelected = selectSubRows ? getRowIsSelected(row, selectedRowIds, getSubRows) : !!selectedRowIds[row.id];\n        row.isSelected = !!isSelected;\n        row.isSomeSelected = isSelected === null;\n        if (isSelected) {\n          selectedFlatRows.push(row);\n        }\n      });\n      return selectedFlatRows;\n    }, [rows, selectSubRows, selectedRowIds, getSubRows]);\n    var isAllRowsSelected = Boolean(Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length);\n    var isAllPageRowsSelected = isAllRowsSelected;\n    if (isAllRowsSelected) {\n      if (Object.keys(nonGroupedRowsById).some(function (id) {\n        return !selectedRowIds[id];\n      })) {\n        isAllRowsSelected = false;\n      }\n    }\n    if (!isAllRowsSelected) {\n      if (page && page.length && page.some(function (_ref5) {\n        var id = _ref5.id;\n        return !selectedRowIds[id];\n      })) {\n        isAllPageRowsSelected = false;\n      }\n    }\n    var getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSelectedRows()) {\n        dispatch({\n          type: actions.resetSelectedRows\n        });\n      }\n    }, [dispatch, data]);\n    var toggleAllRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllPageRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllPageRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleRowSelected = React.useCallback(function (id, value) {\n      return dispatch({\n        type: actions.toggleRowSelected,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsSelectedProps = makePropGetter(getHooks().getToggleAllRowsSelectedProps, {\n      instance: getInstance()\n    });\n    var getToggleAllPageRowsSelectedProps = makePropGetter(getHooks().getToggleAllPageRowsSelectedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      selectedFlatRows: selectedFlatRows,\n      isAllRowsSelected: isAllRowsSelected,\n      isAllPageRowsSelected: isAllPageRowsSelected,\n      toggleRowSelected: toggleRowSelected,\n      toggleAllRowsSelected: toggleAllRowsSelected,\n      getToggleAllRowsSelectedProps: getToggleAllRowsSelectedProps,\n      getToggleAllPageRowsSelectedProps: getToggleAllPageRowsSelectedProps,\n      toggleAllPageRowsSelected: toggleAllPageRowsSelected\n    });\n  }\n  function prepareRow$3(row, _ref6) {\n    var instance = _ref6.instance;\n    row.toggleRowSelected = function (set) {\n      return instance.toggleRowSelected(row.id, set);\n    };\n    row.getToggleRowSelectedProps = makePropGetter(instance.getHooks().getToggleRowSelectedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n  function getRowIsSelected(row, selectedRowIds, getSubRows) {\n    if (selectedRowIds[row.id]) {\n      return true;\n    }\n    var subRows = getSubRows(row);\n    if (subRows && subRows.length) {\n      var allChildrenSelected = true;\n      var someSelected = false;\n      subRows.forEach(function (subRow) {\n        // Bail out early if we know both of these\n        if (someSelected && !allChildrenSelected) {\n          return;\n        }\n        if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n          someSelected = true;\n        } else {\n          allChildrenSelected = false;\n        }\n      });\n      return allChildrenSelected ? true : someSelected ? null : false;\n    }\n    return false;\n  }\n  var defaultInitialRowStateAccessor = function defaultInitialRowStateAccessor(row) {\n    return {};\n  };\n  var defaultInitialCellStateAccessor = function defaultInitialCellStateAccessor(cell) {\n    return {};\n  }; // Actions\n\n  actions.setRowState = 'setRowState';\n  actions.setCellState = 'setCellState';\n  actions.resetRowState = 'resetRowState';\n  var useRowState = function useRowState(hooks) {\n    hooks.stateReducers.push(reducer$9);\n    hooks.useInstance.push(useInstance$9);\n    hooks.prepareRow.push(prepareRow$4);\n  };\n  useRowState.pluginName = 'useRowState';\n  function reducer$9(state, action, previousState, instance) {\n    var _instance$initialRowS = instance.initialRowStateAccessor,\n      initialRowStateAccessor = _instance$initialRowS === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS,\n      _instance$initialCell = instance.initialCellStateAccessor,\n      initialCellStateAccessor = _instance$initialCell === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell,\n      rowsById = instance.rowsById;\n    if (action.type === actions.init) {\n      return _extends({\n        rowState: {}\n      }, state);\n    }\n    if (action.type === actions.resetRowState) {\n      return _extends({}, state, {\n        rowState: instance.initialState.rowState || {}\n      });\n    }\n    if (action.type === actions.setRowState) {\n      var _extends2;\n      var rowId = action.rowId,\n        value = action.value;\n      var oldRowState = typeof state.rowState[rowId] !== 'undefined' ? state.rowState[rowId] : initialRowStateAccessor(rowsById[rowId]);\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends2 = {}, _extends2[rowId] = functionalUpdate(value, oldRowState), _extends2))\n      });\n    }\n    if (action.type === actions.setCellState) {\n      var _oldRowState$cellStat, _rowsById$_rowId, _rowsById$_rowId$cell, _extends3, _extends4;\n      var _rowId = action.rowId,\n        columnId = action.columnId,\n        _value = action.value;\n      var _oldRowState = typeof state.rowState[_rowId] !== 'undefined' ? state.rowState[_rowId] : initialRowStateAccessor(rowsById[_rowId]);\n      var oldCellState = typeof (_oldRowState == null ? void 0 : (_oldRowState$cellStat = _oldRowState.cellState) == null ? void 0 : _oldRowState$cellStat[columnId]) !== 'undefined' ? _oldRowState.cellState[columnId] : initialCellStateAccessor((_rowsById$_rowId = rowsById[_rowId]) == null ? void 0 : (_rowsById$_rowId$cell = _rowsById$_rowId.cells) == null ? void 0 : _rowsById$_rowId$cell.find(function (cell) {\n        return cell.column.id === columnId;\n      }));\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends4 = {}, _extends4[_rowId] = _extends({}, _oldRowState, {\n          cellState: _extends({}, _oldRowState.cellState || {}, (_extends3 = {}, _extends3[columnId] = functionalUpdate(_value, oldCellState), _extends3))\n        }), _extends4))\n      });\n    }\n  }\n  function useInstance$9(instance) {\n    var _instance$autoResetRo = instance.autoResetRowState,\n      autoResetRowState = _instance$autoResetRo === void 0 ? true : _instance$autoResetRo,\n      data = instance.data,\n      dispatch = instance.dispatch;\n    var setRowState = React.useCallback(function (rowId, value) {\n      return dispatch({\n        type: actions.setRowState,\n        rowId: rowId,\n        value: value\n      });\n    }, [dispatch]);\n    var setCellState = React.useCallback(function (rowId, columnId, value) {\n      return dispatch({\n        type: actions.setCellState,\n        rowId: rowId,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var getAutoResetRowState = useGetLatest(autoResetRowState);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetRowState()) {\n        dispatch({\n          type: actions.resetRowState\n        });\n      }\n    }, [data]);\n    Object.assign(instance, {\n      setRowState: setRowState,\n      setCellState: setCellState\n    });\n  }\n  function prepareRow$4(row, _ref) {\n    var instance = _ref.instance;\n    var _instance$initialRowS2 = instance.initialRowStateAccessor,\n      initialRowStateAccessor = _instance$initialRowS2 === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS2,\n      _instance$initialCell2 = instance.initialCellStateAccessor,\n      initialCellStateAccessor = _instance$initialCell2 === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell2,\n      rowState = instance.state.rowState;\n    if (row) {\n      row.state = typeof rowState[row.id] !== 'undefined' ? rowState[row.id] : initialRowStateAccessor(row);\n      row.setState = function (updater) {\n        return instance.setRowState(row.id, updater);\n      };\n      row.cells.forEach(function (cell) {\n        if (!row.state.cellState) {\n          row.state.cellState = {};\n        }\n        cell.state = typeof row.state.cellState[cell.column.id] !== 'undefined' ? row.state.cellState[cell.column.id] : initialCellStateAccessor(cell);\n        cell.setState = function (updater) {\n          return instance.setCellState(row.id, cell.column.id, updater);\n        };\n      });\n    }\n  }\n  actions.resetColumnOrder = 'resetColumnOrder';\n  actions.setColumnOrder = 'setColumnOrder';\n  var useColumnOrder = function useColumnOrder(hooks) {\n    hooks.stateReducers.push(reducer$a);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.columnOrder]);\n    });\n    hooks.visibleColumns.push(visibleColumns$2);\n    hooks.useInstance.push(useInstance$a);\n  };\n  useColumnOrder.pluginName = 'useColumnOrder';\n  function reducer$a(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnOrder: []\n      }, state);\n    }\n    if (action.type === actions.resetColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: instance.initialState.columnOrder || []\n      });\n    }\n    if (action.type === actions.setColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: functionalUpdate(action.columnOrder, state.columnOrder)\n      });\n    }\n  }\n  function visibleColumns$2(columns, _ref2) {\n    var columnOrder = _ref2.instance.state.columnOrder;\n\n    // If there is no order, return the normal columns\n    if (!columnOrder || !columnOrder.length) {\n      return columns;\n    }\n    var columnOrderCopy = [].concat(columnOrder); // If there is an order, make a copy of the columns\n\n    var columnsCopy = [].concat(columns); // And make a new ordered array of the columns\n\n    var columnsInOrder = []; // Loop over the columns and place them in order into the new array\n\n    var _loop = function _loop() {\n      var targetColumnId = columnOrderCopy.shift();\n      var foundIndex = columnsCopy.findIndex(function (d) {\n        return d.id === targetColumnId;\n      });\n      if (foundIndex > -1) {\n        columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0]);\n      }\n    };\n    while (columnsCopy.length && columnOrderCopy.length) {\n      _loop();\n    } // If there are any columns left, add them to the end\n\n    return [].concat(columnsInOrder, columnsCopy);\n  }\n  function useInstance$a(instance) {\n    var dispatch = instance.dispatch;\n    instance.setColumnOrder = React.useCallback(function (columnOrder) {\n      return dispatch({\n        type: actions.setColumnOrder,\n        columnOrder: columnOrder\n      });\n    }, [dispatch]);\n  }\n  defaultColumn.canResize = true; // Actions\n\n  actions.columnStartResizing = 'columnStartResizing';\n  actions.columnResizing = 'columnResizing';\n  actions.columnDoneResizing = 'columnDoneResizing';\n  actions.resetResize = 'resetResize';\n  var useResizeColumns = function useResizeColumns(hooks) {\n    hooks.getResizerProps = [defaultGetResizerProps];\n    hooks.getHeaderProps.push({\n      style: {\n        position: 'relative'\n      }\n    });\n    hooks.stateReducers.push(reducer$b);\n    hooks.useInstance.push(useInstance$b);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions$1);\n  };\n  var defaultGetResizerProps = function defaultGetResizerProps(props, _ref) {\n    var instance = _ref.instance,\n      header = _ref.header;\n    var dispatch = instance.dispatch;\n    var onResizeStart = function onResizeStart(e, header) {\n      var isTouchEvent = false;\n      if (e.type === 'touchstart') {\n        // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n        if (e.touches && e.touches.length > 1) {\n          return;\n        }\n        isTouchEvent = true;\n      }\n      var headersToResize = getLeafHeaders(header);\n      var headerIdWidths = headersToResize.map(function (d) {\n        return [d.id, d.totalWidth];\n      });\n      var clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX;\n      var raf;\n      var mostRecentClientX;\n      var dispatchEnd = function dispatchEnd() {\n        window.cancelAnimationFrame(raf);\n        raf = null;\n        dispatch({\n          type: actions.columnDoneResizing\n        });\n      };\n      var dispatchMove = function dispatchMove() {\n        window.cancelAnimationFrame(raf);\n        raf = null;\n        dispatch({\n          type: actions.columnResizing,\n          clientX: mostRecentClientX\n        });\n      };\n      var scheduleDispatchMoveOnNextAnimationFrame = function scheduleDispatchMoveOnNextAnimationFrame(clientXPos) {\n        mostRecentClientX = clientXPos;\n        if (!raf) {\n          raf = window.requestAnimationFrame(dispatchMove);\n        }\n      };\n      var handlersAndEvents = {\n        mouse: {\n          moveEvent: 'mousemove',\n          moveHandler: function moveHandler(e) {\n            return scheduleDispatchMoveOnNextAnimationFrame(e.clientX);\n          },\n          upEvent: 'mouseup',\n          upHandler: function upHandler(e) {\n            document.removeEventListener('mousemove', handlersAndEvents.mouse.moveHandler);\n            document.removeEventListener('mouseup', handlersAndEvents.mouse.upHandler);\n            dispatchEnd();\n          }\n        },\n        touch: {\n          moveEvent: 'touchmove',\n          moveHandler: function moveHandler(e) {\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX);\n            return false;\n          },\n          upEvent: 'touchend',\n          upHandler: function upHandler(e) {\n            document.removeEventListener(handlersAndEvents.touch.moveEvent, handlersAndEvents.touch.moveHandler);\n            document.removeEventListener(handlersAndEvents.touch.upEvent, handlersAndEvents.touch.moveHandler);\n            dispatchEnd();\n          }\n        }\n      };\n      var events = isTouchEvent ? handlersAndEvents.touch : handlersAndEvents.mouse;\n      var passiveIfSupported = passiveEventSupported() ? {\n        passive: false\n      } : false;\n      document.addEventListener(events.moveEvent, events.moveHandler, passiveIfSupported);\n      document.addEventListener(events.upEvent, events.upHandler, passiveIfSupported);\n      dispatch({\n        type: actions.columnStartResizing,\n        columnId: header.id,\n        columnWidth: header.totalWidth,\n        headerIdWidths: headerIdWidths,\n        clientX: clientX\n      });\n    };\n    return [props, {\n      onMouseDown: function onMouseDown(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      onTouchStart: function onTouchStart(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      style: {\n        cursor: 'col-resize'\n      },\n      draggable: false,\n      role: 'separator'\n    }];\n  };\n  useResizeColumns.pluginName = 'useResizeColumns';\n  function reducer$b(state, action) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnResizing: {\n          columnWidths: {}\n        }\n      }, state);\n    }\n    if (action.type === actions.resetResize) {\n      return _extends({}, state, {\n        columnResizing: {\n          columnWidths: {}\n        }\n      });\n    }\n    if (action.type === actions.columnStartResizing) {\n      var clientX = action.clientX,\n        columnId = action.columnId,\n        columnWidth = action.columnWidth,\n        headerIdWidths = action.headerIdWidths;\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: clientX,\n          headerIdWidths: headerIdWidths,\n          columnWidth: columnWidth,\n          isResizingColumn: columnId\n        })\n      });\n    }\n    if (action.type === actions.columnResizing) {\n      var _clientX = action.clientX;\n      var _state$columnResizing = state.columnResizing,\n        startX = _state$columnResizing.startX,\n        _columnWidth = _state$columnResizing.columnWidth,\n        _state$columnResizing2 = _state$columnResizing.headerIdWidths,\n        _headerIdWidths = _state$columnResizing2 === void 0 ? [] : _state$columnResizing2;\n      var deltaX = _clientX - startX;\n      var percentageDeltaX = deltaX / _columnWidth;\n      var newColumnWidths = {};\n      _headerIdWidths.forEach(function (_ref2) {\n        var headerId = _ref2[0],\n          headerWidth = _ref2[1];\n        newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n      });\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          columnWidths: _extends({}, state.columnResizing.columnWidths, {}, newColumnWidths)\n        })\n      });\n    }\n    if (action.type === actions.columnDoneResizing) {\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: null,\n          isResizingColumn: null\n        })\n      });\n    }\n  }\n  var useInstanceBeforeDimensions$1 = function useInstanceBeforeDimensions(instance) {\n    var flatHeaders = instance.flatHeaders,\n      disableResizing = instance.disableResizing,\n      getHooks = instance.getHooks,\n      columnResizing = instance.state.columnResizing;\n    var getInstance = useGetLatest(instance);\n    flatHeaders.forEach(function (header) {\n      var canResize = getFirstDefined(header.disableResizing === true ? false : undefined, disableResizing === true ? false : undefined, true);\n      header.canResize = canResize;\n      header.width = columnResizing.columnWidths[header.id] || header.originalWidth || header.width;\n      header.isResizing = columnResizing.isResizingColumn === header.id;\n      if (canResize) {\n        header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n          instance: getInstance(),\n          header: header\n        });\n      }\n    });\n  };\n  function useInstance$b(instance) {\n    var plugins = instance.plugins,\n      dispatch = instance.dispatch,\n      _instance$autoResetRe = instance.autoResetResize,\n      autoResetResize = _instance$autoResetRe === void 0 ? true : _instance$autoResetRe,\n      columns = instance.columns;\n    ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns');\n    var getAutoResetResize = useGetLatest(autoResetResize);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetResize()) {\n        dispatch({\n          type: actions.resetResize\n        });\n      }\n    }, [columns]);\n    var resetResizing = React.useCallback(function () {\n      return dispatch({\n        type: actions.resetResize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      resetResizing: resetResizing\n    });\n  }\n  function getLeafHeaders(header) {\n    var leafHeaders = [];\n    var recurseHeader = function recurseHeader(header) {\n      if (header.columns && header.columns.length) {\n        header.columns.map(recurseHeader);\n      }\n      leafHeaders.push(header);\n    };\n    recurseHeader(header);\n    return leafHeaders;\n  }\n  var cellStyles = {\n    position: 'absolute',\n    top: 0\n  };\n  var useAbsoluteLayout = function useAbsoluteLayout(hooks) {\n    hooks.getTableBodyProps.push(getRowStyles);\n    hooks.getRowProps.push(getRowStyles);\n    hooks.getHeaderGroupProps.push(getRowStyles);\n    hooks.getFooterGroupProps.push(getRowStyles);\n    hooks.getHeaderProps.push(function (props, _ref) {\n      var column = _ref.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref2) {\n      var cell = _ref2.cell;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: cell.column.totalLeft + \"px\",\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref3) {\n      var column = _ref3.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n  useAbsoluteLayout.pluginName = 'useAbsoluteLayout';\n  var getRowStyles = function getRowStyles(props, _ref4) {\n    var instance = _ref4.instance;\n    return [props, {\n      style: {\n        position: 'relative',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n  var cellStyles$1 = {\n    display: 'inline-block',\n    boxSizing: 'border-box'\n  };\n  var getRowStyles$1 = function getRowStyles(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n  var useBlockLayout = function useBlockLayout(hooks) {\n    hooks.getRowProps.push(getRowStyles$1);\n    hooks.getHeaderGroupProps.push(getRowStyles$1);\n    hooks.getFooterGroupProps.push(getRowStyles$1);\n    hooks.getHeaderProps.push(function (props, _ref2) {\n      var column = _ref2.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref3) {\n      var cell = _ref3.cell;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref4) {\n      var column = _ref4.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n  useBlockLayout.pluginName = 'useBlockLayout';\n  function useFlexLayout(hooks) {\n    hooks.getTableProps.push(getTableProps);\n    hooks.getRowProps.push(getRowStyles$2);\n    hooks.getHeaderGroupProps.push(getRowStyles$2);\n    hooks.getFooterGroupProps.push(getRowStyles$2);\n    hooks.getHeaderProps.push(getHeaderProps);\n    hooks.getCellProps.push(getCellProps);\n    hooks.getFooterProps.push(getFooterProps);\n  }\n  useFlexLayout.pluginName = 'useFlexLayout';\n  var getTableProps = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n  var getRowStyles$2 = function getRowStyles(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        flex: '1 0 auto',\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n  var getHeaderProps = function getHeaderProps(props, _ref3) {\n    var column = _ref3.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n  var getCellProps = function getCellProps(props, _ref4) {\n    var cell = _ref4.cell;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: cell.column.totalFlexWidth + \" 0 auto\",\n        minWidth: cell.column.totalMinWidth + \"px\",\n        width: cell.column.totalWidth + \"px\"\n      }\n    }];\n  };\n  var getFooterProps = function getFooterProps(props, _ref5) {\n    var column = _ref5.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n  actions.columnStartResizing = 'columnStartResizing';\n  actions.columnResizing = 'columnResizing';\n  actions.columnDoneResizing = 'columnDoneResizing';\n  actions.resetResize = 'resetResize';\n  function useGridLayout(hooks) {\n    hooks.stateReducers.push(reducer$c);\n    hooks.getTableProps.push(getTableProps$1);\n    hooks.getHeaderProps.push(getHeaderProps$1);\n    hooks.getRowProps.push(getRowProps);\n  }\n  useGridLayout.pluginName = 'useGridLayout';\n  var getTableProps$1 = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    var gridTemplateColumns = instance.visibleColumns.map(function (column) {\n      var _instance$state$colum;\n      if (instance.state.gridLayout.columnWidths[column.id]) return instance.state.gridLayout.columnWidths[column.id] + \"px\"; // When resizing, lock the width of all unset columns\n      // instead of using user-provided width or defaultColumn width,\n      // which could potentially be 'auto' or 'fr' units that don't scale linearly\n\n      if ((_instance$state$colum = instance.state.columnResizing) == null ? void 0 : _instance$state$colum.isResizingColumn) return instance.state.gridLayout.startWidths[column.id] + \"px\";\n      if (typeof column.width === 'number') return column.width + \"px\";\n      return column.width;\n    });\n    return [props, {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: gridTemplateColumns.join(\" \")\n      }\n    }];\n  };\n  var getHeaderProps$1 = function getHeaderProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      id: \"header-cell-\" + column.id,\n      style: {\n        position: \"sticky\",\n        //enables a scroll wrapper to be placed around the table and have sticky headers\n        gridColumn: \"span \" + column.totalVisibleHeaderCount\n      }\n    }];\n  };\n  var getRowProps = function getRowProps(props, _ref3) {\n    var row = _ref3.row;\n    if (row.isExpanded) {\n      return [props, {\n        style: {\n          gridColumn: \"1 / \" + (row.cells.length + 1)\n        }\n      }];\n    }\n    return [props, {}];\n  };\n  function reducer$c(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        gridLayout: {\n          columnWidths: {}\n        }\n      }, state);\n    }\n    if (action.type === actions.resetResize) {\n      return _extends({}, state, {\n        gridLayout: {\n          columnWidths: {}\n        }\n      });\n    }\n    if (action.type === actions.columnStartResizing) {\n      var columnId = action.columnId,\n        headerIdWidths = action.headerIdWidths;\n      var columnWidth = getElementWidth(columnId);\n      if (columnWidth !== undefined) {\n        var startWidths = instance.visibleColumns.reduce(function (acc, column) {\n          var _extends2;\n          return _extends({}, acc, (_extends2 = {}, _extends2[column.id] = getElementWidth(column.id), _extends2));\n        }, {});\n        var minWidths = instance.visibleColumns.reduce(function (acc, column) {\n          var _extends3;\n          return _extends({}, acc, (_extends3 = {}, _extends3[column.id] = column.minWidth, _extends3));\n        }, {});\n        var maxWidths = instance.visibleColumns.reduce(function (acc, column) {\n          var _extends4;\n          return _extends({}, acc, (_extends4 = {}, _extends4[column.id] = column.maxWidth, _extends4));\n        }, {});\n        var headerIdGridWidths = headerIdWidths.map(function (_ref4) {\n          var headerId = _ref4[0];\n          return [headerId, getElementWidth(headerId)];\n        });\n        return _extends({}, state, {\n          gridLayout: _extends({}, state.gridLayout, {\n            startWidths: startWidths,\n            minWidths: minWidths,\n            maxWidths: maxWidths,\n            headerIdGridWidths: headerIdGridWidths,\n            columnWidth: columnWidth\n          })\n        });\n      } else {\n        return state;\n      }\n    }\n    if (action.type === actions.columnResizing) {\n      var clientX = action.clientX;\n      var startX = state.columnResizing.startX;\n      var _state$gridLayout = state.gridLayout,\n        _columnWidth = _state$gridLayout.columnWidth,\n        _minWidths = _state$gridLayout.minWidths,\n        _maxWidths = _state$gridLayout.maxWidths,\n        _state$gridLayout$hea = _state$gridLayout.headerIdGridWidths,\n        _headerIdGridWidths = _state$gridLayout$hea === void 0 ? [] : _state$gridLayout$hea;\n      var deltaX = clientX - startX;\n      var percentageDeltaX = deltaX / _columnWidth;\n      var newColumnWidths = {};\n      _headerIdGridWidths.forEach(function (_ref5) {\n        var headerId = _ref5[0],\n          headerWidth = _ref5[1];\n        newColumnWidths[headerId] = Math.min(Math.max(_minWidths[headerId], headerWidth + headerWidth * percentageDeltaX), _maxWidths[headerId]);\n      });\n      return _extends({}, state, {\n        gridLayout: _extends({}, state.gridLayout, {\n          columnWidths: _extends({}, state.gridLayout.columnWidths, {}, newColumnWidths)\n        })\n      });\n    }\n    if (action.type === actions.columnDoneResizing) {\n      return _extends({}, state, {\n        gridLayout: _extends({}, state.gridLayout, {\n          startWidths: {},\n          minWidths: {},\n          maxWidths: {}\n        })\n      });\n    }\n  }\n  function getElementWidth(columnId) {\n    var _document$getElementB;\n    var width = (_document$getElementB = document.getElementById(\"header-cell-\" + columnId)) == null ? void 0 : _document$getElementB.offsetWidth;\n    if (width !== undefined) {\n      return width;\n    }\n  }\n  exports._UNSTABLE_usePivotColumns = _UNSTABLE_usePivotColumns;\n  exports.actions = actions;\n  exports.defaultColumn = defaultColumn;\n  exports.defaultGroupByFn = defaultGroupByFn;\n  exports.defaultOrderByFn = defaultOrderByFn;\n  exports.defaultRenderer = defaultRenderer;\n  exports.emptyRenderer = emptyRenderer;\n  exports.ensurePluginOrder = ensurePluginOrder;\n  exports.flexRender = flexRender;\n  exports.functionalUpdate = functionalUpdate;\n  exports.loopHooks = loopHooks;\n  exports.makePropGetter = makePropGetter;\n  exports.makeRenderer = makeRenderer;\n  exports.reduceHooks = reduceHooks;\n  exports.safeUseLayoutEffect = safeUseLayoutEffect;\n  exports.useAbsoluteLayout = useAbsoluteLayout;\n  exports.useAsyncDebounce = useAsyncDebounce;\n  exports.useBlockLayout = useBlockLayout;\n  exports.useColumnOrder = useColumnOrder;\n  exports.useExpanded = useExpanded;\n  exports.useFilters = useFilters;\n  exports.useFlexLayout = useFlexLayout;\n  exports.useGetLatest = useGetLatest;\n  exports.useGlobalFilter = useGlobalFilter;\n  exports.useGridLayout = useGridLayout;\n  exports.useGroupBy = useGroupBy;\n  exports.useMountedLayoutEffect = useMountedLayoutEffect;\n  exports.usePagination = usePagination;\n  exports.useResizeColumns = useResizeColumns;\n  exports.useRowSelect = useRowSelect;\n  exports.useRowState = useRowState;\n  exports.useSortBy = useSortBy;\n  exports.useTable = useTable;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["renderErr","actions","init","defaultRenderer","_ref","_ref$value","value","emptyRenderer","React","createElement","Fragment","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","_len","arguments","length","propList","Array","_key","reduce","props","next","style","className","rest","_objectWithoutPropertiesLoose","_extends","handlePropGetter","prevProps","userProps","meta","isArray","apply","concat","makePropGetter","hooks","prev","reduceHooks","initial","allowUndefined","nextValue","console","info","Error","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","before","beforeIndex","functionalUpdate","updater","old","useGetLatest","obj","ref","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","useAsyncDebounce","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_len2","args","_key2","_args2","wrap","_callee2$","_context2","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","_callee","_callee$","_context","t0","t1","sent","call","t2","finish","stop","abrupt","makeRenderer","instance","column","type","Comp","flexRender","isReactComponent","component","isClassComponent","isExoticComponent","proto","Object","getPrototypeOf","prototype","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","row","getBy","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","_loop","headerGroup","headers","parentColumns","hasParents","some","d","latestParentColumn","reverse","newParent","originalId","placeholderOf","push","pathObjCache","Map","path","def","cacheKey","JSON","stringify","pathObj","get","makePathArray","set","val","cursor","pathPart","e","getFirstDefined","i","isFunction","a","arr","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","_ref$expandSubRows","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","passiveEventSupported","supported","options","passive","window","addEventListener","removeEventListener","err","reOpenBracket","reCloseBracket","flattenDeep","String","replace","join","newArr","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","_ref3","index","defaultGetFooterGroupProps","_ref4","defaultGetRowProps","_ref5","defaultGetCellProps","_ref6","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","should","columnId","shouldAll","isMountedRef","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","_instance$autoResetHi","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","_props$initialState","_props$defaultColumn","_props$getSubRows","getSubRows","_props$getRowId","getRowId","_props$stateReducer","stateReducer","_props$useControlledS","useTable","instanceRef","Boolean","_getInstance","data","userColumns","getStateReducer","s","handler","_React$useReducer","useReducer","undefined","reducerState","useMemo","_React$useMemo","flatRows","rowsById","allColumnsQueue","shift","accessRowsForColumn","accessValueHooks","initialRows","find","duplicateColumns","all","visibleColumnsDep","sort","_calculateHeaderWidth","calculateHeaderWidths","totalColumnsMinWidth","totalColumnsWidth","totalColumnsMaxWidth","render","footerGroups","allCells","values","cells","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","_calculateHeaderWidth2","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRow","originalRow","rowIndex","parentRows","originalSubRows","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","reducer$1","useInstance$1","onClick","isAllRowsExpanded","keys","expandAll","rowId","setExpanded","exists","shouldExist","_extends2","_state$expanded","_","_toPropertyKey","_instance$manualExpan","_instance$paginateExp","paginateExpandedRows","_instance$expandSubRo","_instance$autoResetEx","autoResetExpanded","getAutoResetExpanded","expandedDepth","findExpandedDepth","preExpandedRows","maxDepth","splitId","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","reducer$2","useInstance$2","filters","filterMethod","previousfilter","newFilter","_allColumns","_userFilterTypes","manualFilters","_instance$defaultCanF","defaultCanFilter","disableFilters","_instance$autoResetFi","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","nonFilteredColumns","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","reducer$3","useInstance$3","globalFilter","stateWithoutGlobalFilter","manualGlobalFilter","globalFilterValue","_instance$autoResetGl","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","minMax","average","median","mid","floor","nums","b","unique","from","Set","uniqueCount","size","count","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","reducer$4","groupBy","useInstance$4","prepareRow$1","canGroupBy","persist","resolvedGroupBy","groupByColumns","g","col","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","_instance$groupByFn","groupByFn","defaultGroupByFn","manualGroupBy","_instance$aggregation","aggregations","userAggregations","_instance$autoResetGr","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","aggregateRowsToValues","leafRows","groupedRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupUpRecursively","parentId","rowGroupsMap","aggregatedGroupedRows","entries","groupByVal","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","_row$subRows","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","alphanumeric","rowA","rowB","_getRowValuesByColumn","getRowValuesByColumnID","toString","aa","bb","an","parseInt","bn","combo","isNaN","datetime","_getRowValuesByColumn2","getTime","compareBasic","basic","_getRowValuesByColumn3","string","_getRowValuesByColumn4","alower","blower","number","_getRowValuesByColumn5","replaceNonNumeric","row1","row2","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","reducer$5","useInstance$5","_instance$isMultiSort","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","newSortBy","_sortBy","desc","multi","disableSortRemove","disableMultiRemove","_instance$maxMultiSor","maxMultiSortColCount","_sortBy2","existingSortBy","existingIndex","hasDescDefined","_newSortBy","sortAction","splice","_instance$orderByFn","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","_instance$autoResetSo","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","reducer$6","useInstance$6","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","_instance$autoResetPa","autoResetPage","userPageCount","_instance$state","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","reducer$7","visibleColumns$1","useInstance$7","prepareRow$2","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","buildPivotColumns","pivotFilters","pivotColumn","sourceColumn","isPivoted","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","newMaterialized","_ref5$instance$state","_ref7","_instance$autoResetPi","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","pluginName$1","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","reducer$8","useInstance$8","prepareRow$3","_instance$manualRowSe","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","_instance$nonGroupedR","selectAll","_setSelected","_rowsById","_instance$selectSubRo","selectSubRows","newSelectedRowIds","handleRowById","_setSelected2","_rowsById2","_instance$selectSubRo2","_selectSubRows","_getSubRows","_selectAll","_newSelectedRowIds","_handleRowById","_instance$nonGroupedR2","_instance$autoResetSe","autoResetSelectedRows","_instance$selectSubRo3","selectedFlatRows","getRowIsSelected","getAutoResetSelectedRows","allChildrenSelected","someSelected","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","reducer$9","useInstance$9","prepareRow$4","_instance$initialRowS","initialRowStateAccessor","_instance$initialCell","initialCellStateAccessor","rowState","oldRowState","_oldRowState$cellStat","_rowsById$_rowId","_rowsById$_rowId$cell","_extends3","_extends4","_rowId","_value","_oldRowState","oldCellState","cellState","_instance$autoResetRo","autoResetRowState","getAutoResetRowState","_instance$initialRowS2","_instance$initialCell2","setState","resetColumnOrder","setColumnOrder","useColumnOrder","reducer$a","columnOrder","visibleColumns$2","useInstance$a","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","reducer$b","useInstance$b","useInstanceBeforeDimensions$1","onResizeStart","isTouchEvent","touches","headersToResize","getLeafHeaders","headerIdWidths","clientX","round","raf","mostRecentClientX","dispatchEnd","cancelAnimationFrame","dispatchMove","scheduleDispatchMoveOnNextAnimationFrame","clientXPos","requestAnimationFrame","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","_clientX","_state$columnResizing","_columnWidth","_state$columnResizing2","_headerIdWidths","deltaX","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","_instance$autoResetRe","autoResetResize","getAutoResetResize","resetResizing","leafHeaders","recurseHeader","cellStyles","top","useAbsoluteLayout","getRowStyles","cellStyles$1","display","boxSizing","getRowStyles$1","useBlockLayout","useFlexLayout","getRowStyles$2","flex","useGridLayout","reducer$c","getTableProps$1","getHeaderProps$1","gridTemplateColumns","_instance$state$colum","gridLayout","startWidths","gridColumn","getElementWidth","acc","minWidths","maxWidths","headerIdGridWidths","_state$gridLayout","_minWidths","_maxWidths","_state$gridLayout$hea","_headerIdGridWidths","_document$getElementB","getElementById","offsetWidth"],"sources":["/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/publicUtils.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/utils.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/makeDefaultPluginHooks.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/hooks/useColumnVisibility.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/hooks/useTable.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useExpanded.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/filterTypes.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useFilters.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useGlobalFilter.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/aggregations.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useGroupBy.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/sortTypes.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useSortBy.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/usePagination.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useRowSelect.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useRowState.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useColumnOrder.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useResizeColumns.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useBlockLayout.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useFlexLayout.js","/home/kuldeep/php-projects/laravel-framework/laravel-log-analysis-system/front/node_modules/react-table/src/plugin-hooks/useGridLayout.js"],"sourcesContent":["import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}